<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <ISO8601PeriodTypes />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sample - Superstore' inline='true' name='federated.1hjmkbn0ogazm11emzh251w25vnm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.17uabfu119tcty17xr8fr1jb9tsk'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/College PPTs/5th SEM/INT233/Sample - Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.17uabfu119tcty17xr8fr1jb9tsk' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.17uabfu119tcty17xr8fr1jb9tsk' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>4</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_A6EF912A1F2C49BABCCEB6598B7D5083]' role='measure' type='quantitative' />
      <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Category:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Furniture&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Technology&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Office Supplies&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_A6EF912A1F2C49BABCCEB6598B7D5083'>
            <properties context=''>
              <relation connection='excel-direct.17uabfu119tcty17xr8fr1jb9tsk' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='dependent interactive filters'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]'>
            <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Bookcases&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</column>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk] / [federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk])</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{CA4A7C97-5356-47C1-87E6-C554028C3D68}' />
    </worksheet>
    <worksheet name='filter based on category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;Office Supplies&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{B86DF657-3B99-464E-BE13-27AAA8FCEC74}' />
    </worksheet>
    <worksheet name='filter based on condition: sub-category whose sales greater than or equal to 20000'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]'>
            <groupfilter expression='SUM([Sales]) &gt;= 20000.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{83D6E0D7-604E-45F9-967A-BEE807216F2C}' />
    </worksheet>
    <worksheet name='filter based on legend'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;Furniture&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{5DC3764E-8A48-475C-A56C-88676FAE414E}' />
    </worksheet>
    <worksheet name='filter based on sub-category'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Chairs&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Tables&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{92023569-DE25-4A56-8A73-80F3C4AF4AE2}' />
    </worksheet>
    <worksheet name='filter based on top 3 sum of sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]'>
            <groupfilter count='3' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{A3F4C5FB-2489-4CFB-8408-D5278E9F98CF}' />
    </worksheet>
    <worksheet name='filter on bottom 5 products based on sum of sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Product Name:nk]'>
            <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:Product Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Product Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Product Name:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{6A3448B0-63F6-4D4F-8608-EB6994AFB92A}' />
    </worksheet>
    <worksheet name='filter on the basis of headers'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Envelopes&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Furnishings&quot;' />
              <groupfilter function='member' level='[none:Sub-Category:nk]' member='&quot;Supplies&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{7899DAC0-5EA8-4030-AC6A-2E9A0379C1D0}' />
    </worksheet>
    <worksheet name='filter: Date fields: sales on previous yr'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]' first-period='-1' include-future='true' include-null='false' last-period='-1' period-type-v2='quarter' />
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Order Date:ok]' value='176' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk] * [federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk])</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{4E682CA8-1211-41E2-B805-AF5CCA4E8A22}' />
    </worksheet>
    <worksheet name='filter: date fields: range of dates'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Day' name='[dy:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Order Date]' derivation='Month' name='[mn:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter' name='[qr:Order Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]' included-values='in-range'>
            <min>#2022-01-01#</min>
            <max>#2023-12-31#</max>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk] * [federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk])</rows>
        <cols>([federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Order Date:ok] / ([federated.1hjmkbn0ogazm11emzh251w25vnm].[qr:Order Date:ok] / ([federated.1hjmkbn0ogazm11emzh251w25vnm].[mn:Order Date:ok] / [federated.1hjmkbn0ogazm11emzh251w25vnm].[dy:Order Date:ok])))</cols>
      </table>
      <simple-id uuid='{53A6C33E-F362-4536-9511-ADD8CE23143D}' />
    </worksheet>
    <worksheet name='filter: date fields: this yr'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='None' name='[none:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]' first-period='0' include-future='true' include-null='false' last-period='0' period-type-v2='year' />
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk] * [federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk])</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{A807FB52-A697-486D-9370-4B7527F8F4BF}' />
    </worksheet>
    <worksheet name='filters based on measures'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]' included-values='in-range'>
            <min>0.0</min>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{B5E639D9-C024-4A95-9F18-34610A68EA71}' />
    </worksheet>
    <worksheet name='interactive filters: used for editing filters with ease'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Category:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Category:nk]' member='&quot;Technology&quot;' />
                <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{382F3D2F-EDCB-4F45-B261-70DDA071B05D}' />
    </worksheet>
    <worksheet name='sub-category that ends with &apos;es&apos;'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]'>
            <groupfilter expression='ENDSWITH([Sub-Category], &apos;es&apos;)' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='es' user:ui-pattern_type='ends-with'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:Sub-Category:nk]' />
                <groupfilter function='member' level='[none:Sub-Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{0BD8CA29-E0FA-4B37-BC38-52BEE4F12E27}' />
    </worksheet>
    <worksheet name='sum of profit atmost 0'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]' included-values='in-range'>
            <max>10000.0</max>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{051FF726-2B8E-426F-95FB-51511876B147}' />
    </worksheet>
    <worksheet name='wild card in filter: category starts with &apos;o&apos;'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sample - Superstore' name='federated.1hjmkbn0ogazm11emzh251w25vnm' />
          </datasources>
          <datasource-dependencies datasource='federated.1hjmkbn0ogazm11emzh251w25vnm'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]'>
            <groupfilter expression='CONTAINS([Category], &apos;e&apos;)' function='filter' user:ui-enumeration='inclusive' user:ui-pattern-include-all-when-empty='true' user:ui-pattern_text='e' user:ui-pattern_type='contains'>
              <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                <groupfilter function='level-members' level='[none:Category:nk]' />
                <groupfilter function='member' level='[none:Category:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</rows>
        <cols>[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{4203FA55-3918-4DD2-939D-19F70F81630A}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='filter based on sub-category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B190C986-615B-4B16-9CD1-3064070B5096}' />
    </window>
    <window class='worksheet' name='filter based on category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B73725DA-9F97-4C95-ABA7-D40E413FA5A7}' />
    </window>
    <window class='worksheet' name='wild card in filter: category starts with &apos;o&apos;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24347EB3-5B8A-43F1-840B-00D7FFA39712}' />
    </window>
    <window class='worksheet' name='sub-category that ends with &apos;es&apos;'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96CD17E7-2ADB-4B51-99EC-74F51C23E080}' />
    </window>
    <window class='worksheet' name='filter based on condition: sub-category whose sales greater than or equal to 20000'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{46E9D486-E3B2-474D-8620-4F8AC896C487}' />
    </window>
    <window class='worksheet' name='filter based on top 3 sum of sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1D574D40-9A2B-46D3-9D57-706FD516A4F0}' />
    </window>
    <window class='worksheet' name='filter on bottom 5 products based on sum of sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{130A3C24-02B3-4AE8-A148-F80173715358}' />
    </window>
    <window class='worksheet' name='filter: Date fields: sales on previous yr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Order Date:ok]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Ship Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A572C57C-1C36-406C-9600-DCFF6787332A}' />
    </window>
    <window class='worksheet' name='filter: date fields: this yr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{210939F3-62D1-4521-BCD2-F54527645935}' />
    </window>
    <window class='worksheet' name='filter: date fields: range of dates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Order Date:qk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33D6C70F-B283-4185-B894-9AAA8E4B60FD}' />
    </window>
    <window class='worksheet' name='interactive filters: used for editing filters with ease'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA9AA9F5-C07E-4390-9CBD-CA25D9DF1699}' />
    </window>
    <window class='worksheet' name='dependent interactive filters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]' type='filter' />
            <card param='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE02B19A-C084-4665-B85C-61467A6CDD76}' />
    </window>
    <window class='worksheet' name='filters based on measures'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{9051844C-7B64-4BF0-BF1C-516FBBBC4593}' />
    </window>
    <window class='worksheet' name='sum of profit atmost 0'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hjmkbn0ogazm11emzh251w25vnm].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D4F0688-424F-4C75-B140-37370832A960}' />
    </window>
    <window class='worksheet' name='filter on the basis of headers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E53D4B37-9900-41A5-A600-E638944F2795}' />
    </window>
    <window class='worksheet' maximized='true' name='filter based on legend'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Category:nk]</field>
            <field>[federated.1hjmkbn0ogazm11emzh251w25vnm].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D08749A-F5C4-41F0-8F91-1EA7E73FC00F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='167' name='dependent interactive filters' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='filter based on category' width='192'>
      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
      PgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='filter based on condition: sub-category whose sales greater than or equal to 20000' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='filter based on legend' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='127' name='filter based on sub-category' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAAB/CAYAAAC5QM2nAAAACXBIWXMAABJ0AAASdAHeZh94
      AAALbklEQVR4nO3de1TUZR7H8XfNYoMoNl65qA0ebVFDMVNXy7Me9dCCphzrZJIWRiuK5exa
      7rZZeOBoN1N3TpaSYJSb1dE8KNYcWTnrlq26LgtqXNpIZr0AoTEKDcyB/cn+AaJcBhR0mOH5
      vv7jN7/fb5555vfheX6X55k76urq6hBCUXd2dQGE6EoSAKE0CYBQmgRAKE0CIJQmARBKkwAI
      pUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIg
      lCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgTgNquqqurqInikyspKl7yPBEAoTQIglPaLri6A
      Cua+/GlXF0E4IS2AUJoHtAAaF7N281HaEQrLqtF69MY4djZPLJxGkB7ISSGxZBbx4X6deI9S
      LIlrKJ6TREzorSq38ARuHgCNYsubvH4kgKdi1/H8YB+8am2cPnaUsksQ1Jljvgk/wuOTbtXO
      hAdx7wCUH2JHRn+i10Yz3qdhmZeBYQ+FM6xLCya6C7cOQOmxb7g0ddG1g98ZrYL/ZO7nc8sJ
      rJU19AiYzrIX5zOqYTvtYha7P0rjSGEZ1Rr06P9LZjwZS+TVFSjFkvg+LInnak+q1JLIF/7x
      xIwoZO+WzRz4PoQlSTGEasUc2rqFtNwyqjUd3gNH8/DT0YQPb6+Qwh25cQA0zp89z/CJQe2u
      ef7AJ3wVEUn02sX4669wdu/rbNxbwKaoYADKrefxnRHLuucH4+Ol4Sg5TPKGDzm2No5J+jZ2
      XF3E3s0fY5v+Rzb+3h89UJqRzFcDo1izZCQGr1rs5/I4WFQMw0fcmo8tXMqNA3CBstJAAm6g
      nx8YEcuzjSfBOoZMmoDhC0fj6wMemEN441869P6/5qGRf+NcORDgfL/5aenMML1CdICucVl1
      dTV9/Idi8ALwwmfwWOYOvqkPJtyIGwdgAAP9zpNTCnT2ZNdeSOYnu7CcsFJZc23xxPG0GYAh
      j8QQft3BDxA0JYI7Nq3mxa9HMCF0IhMmhnBPPz06J/sQ7s2NA6AjcEggu08XQWj73SDnyjm0
      ZRvf3R/L6qeHNfznhpyUWLLa2bJXr1b69X5TWfHmr7CXneWHb09i2fwxPwYv5eX5wbTVmxLu
      ya1vhPmNm4D3138ly96ZvZzhh6ppzJt+7eDvPC98Bg5jzPRIlq8xEZrzDQW3atfCpdw6APiF
      8WzYRVLfTOV4iQMNoNbG6cMWjpXe6E70eFdk8y9r/fa19nMc/2wju3I6VqRT+5LIzP8JR31h
      sOVnU9CjP307tjvRxdy4CwSgIyB8Fa/2/5SUDatIrqyBq3eCH7jRfQQzd+lokjavIr1Sw3vg
      cCbPWUjkz69ysgMlGjZuNHm7/sxL75RRrfWgt3EiC56PYmgH9iW63h11dXV1XV2I7qyqqooF
      a/d1dTGEE+7dBRLiNpMW4DarqqqiZ8+eXV0Mj1NZWUnv3r1v+/tICyCUJgEQSpMACKW5+WXQ
      7kGGRLovaQGE0tywBcghJXYL/3T2cmAkCfHhN/R8XE5KIiWzrj3j3/o6sWSNl6GQqnLDAIQS
      k5RETMNfpZZE3mdJJ8f8CtE66QIJpblhC3CDmj3jr/Mewv2PP8PiKQHXPZt/hcvfWXj33QPk
      llWD9xB+HbOCx0J823h+306hJZUPD+RSv8n9PP7MYqZcHRcgQyK7Fc8NQLGVi8Hz+dPCe+in
      11FryyftnffYP3gtcxufTCsjr6g/S15az3KfO3FYD7F181vsX3H9Ok2VZmzm8+o5rFy/HINX
      Lbb8dLaYd9A7IZoQvQyJ7G48tws0YibzHxpGP339f2Yvw0imTujBjxe061byY/JvJjDYxwvQ
      oTfO4LeRAzh02NnT+0X8I380i+aNbBzyaBg5j+ipVv6eXT/EstUhkVPl4PdUntsCaBfJ2v0R
      aUcKKau+dtAHRl6grTGUPsPvxXC0lMsE06f5i5f/y+m8dA7EprfYLjDyEuAnQyK7GQ8NgEbB
      Z+s5cGcUcW+Y8G9oBeqvGLXjisYV/V3c1dprNTXUtHeZVYZEdise2gW6QFHhvUQ8Mbbx4L9R
      pSf+zf+GBLZ+sA4YitF2ktzy9vYiQyK7Cw8NgDfePfPJOm6jFtAcP5GfmUzygebjJK9QXWmn
      FkBzUHI4iU2HAnlsprPxWyOYPLWSz7fuId9WCw37Pn04lX2n6teQIZHdi4d2gfowNfpRfjAn
      YEquRtfbyNjwR3l8ZjFNnrrp50vJ7jWstFZSQ8PwxVVRhDq9YqkjaO4f+J33DnYkmCir1tB5
      D2T45DksnFS/hgyJ7F5kQMxtJkMi3ZuHdoGEuDWkBbjNZEhkx8iQSCFcQFqA20x+JtW9eehV
      IM8iXaCb56quo3SBhNIkAEJpEgChNAmAUJpcBRJKkxZAKE0CIJQmARBKkwAIpUkAhNIkAEJp
      8iyQi9kLLaR+8CUnL9bQo/8YIhY3m1QrJ4XEklnNpoIsJeO1TZyNiCfG+XA2t1Zbdpw9f9nH
      kcJrE4o9smQJM4Zc99u19kIsqR/w5cmL1PToz5iIxUSHD+faJ84hJbGEWc0mLSjNeI1NZyOI
      jwnlZmtHAuBKpRmYzdmMeWE9S41e1FotbNxgRrf6ZcKcTkOhUWzZTuagBcR76MHP95/xSvKP
      TImK4w2TP3pdw4Rjb22j1/o4JukBSskwm8ke8wLrlxrxqrVi2bgBs241LzuvHLRiC9szB7Eg
      /uYPfpAukAtp5B3MwDfKxGyjHh069MbZmKJ8yTiYh+Zsq+IMUg8FsPDJjn3BbqH3VEyvrWDu
      WH/qJ/Gon3AsIvQE3zZMp6HlHSTDNwrTbCN6Hej0RmabovDNOEie88ohI/UQAQufbGOcd9sk
      AC5zhoJcI+PHNf2mfMaNx5hbwJnWNtGKsSRnYly8iBBPnnTIL4CAFrPX2Pn5574YGmYnO1OQ
      i3H8uKYh9xnHeGMuBa1XDsWWZDKNi1nUicqRALjMZWyOvhiaf1d6A30dNi63WF+jaO97HL1v
      OfODu9u8c3YK95hJ7zWfh4Pql1y2OejbsnIw9HVga1k5aEV7ee/ofSyfH9ypWfnkHMCVDAbu
      brHwbgyGpkvOp60hNg3QTyLu7aBuNe2iVnGK3ZtSyB0Rw+rokOv+4xswtKwc7m5ZOayprxwm
      xb1NUCcrR1oAV7LZuNRi4SVstqZLAiMTSEoy89y4PHalFzk9P/AsGhWndpIQvwfmJbImKgTf
      JgevDVvLyuFSy8ohISkJ83PjyNuVTlEnK0cC4DJ9MOjLsTmaLXbYKNcbWk7Ui56QRSt5sGAr
      qTl21xTxNrLnpLIuXc9T69Ywv5XfZ+hj0FPesnKwlesbzxOupw9ZxMoHC9iamkNnakcC4DJD
      CR5tJSu76ddlz87COjq49ZnldAGELw3HlmImo/msj57EfoQPPoEFpnk4+x2RocGjsWZlNz2Y
      7dlkWUcT3HrlEBC+lHBbCuZOVI4EwGV0jJoZRsVOM/utDjQ0HNb9mHdWEDZzlPN+ft9pLIsZ
      ROZ2C8Ue2he6fPwbyqfNavNSpW7UTMIqdmLeb8Whgeawst+8k4qwmYxyXjlMWxbDoMztWDpY
      OXIS7Ep+YZhMGqnbVhF39U6wydTGTbB6PqHRmM6tY2OqPwkduNvZ1c5YT3P+SMOJfTMTl139
      hU4/wkwmtNRtrIq7eifYhKn9yiHadI51G1PxT4i56fsBMiJMKE26QEJpEgChNAmAUJoEQChN
      AiCUJgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0
      CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITS
      JABCaRIAoTQJgFDa/wGvRcbCjWGN4wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='147' name='filter based on top 3 sum of sales' width='192'>
      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
    </thumbnail>
    <thumbnail height='187' name='filter on bottom 5 products based on sum of sales' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='147' name='filter on the basis of headers' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAACTCAYAAADYxhZeAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAPCElEQVR4nO3df1RVZb7H8bedCx1ElEPmCISBo/eChEIKZkmLtKVzHFMWdTMYXeFYomnR
      dTQbbWBgbJzGq8ZVU0oSr6U1ZguwPAuW3mXmj9b4C38BrUhIEU7446jcA1xYO+8fIL9RQOCc
      4/N9reUfnrP3fp4N58N+9j77++w+t27duoUQinrA1h0QwpYkAEJpEgChNAmAUJoEQChNAiCU
      JgEQSpMACKVJAITSJABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQ
      mgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAg6msrLR1F+xORUVFl9eVAAilSQCE0v7F
      1h0QnTd92We27sJ9Q44AQmk2PwLkpsWx8Z9tvBE2n9Q5wb3ZEeKOj+7dNoXN2TwA4E1kUgLG
      wbbuh1CRDIGE0uzgCHB3uWnJlIS/hMuBXZhOFVNR44zXhPksnjECVzTyPlnK/uEreG2svsla
      F8h8Zwf9Fi1logdgLcSUvpXsc+VU4YLP4y/y+9lP4qVrv11roYn0rdmcK69Ccx7IyCmziTUO
      w7X+fbMpmYw+Rgx5GRz8/go1bSwDVgpN6WzNPkd5Fbj4PM6Lv5/Nk7cb1krZv2kjGefKqdJ0
      uAwKZPLLsRiHubbukOh2DhEAuET2jgNMiYxlxWxP9L9cJHPlGjIL1hLjr+PfHg/m4/2nqB47
      loYIFB3ju8FPk+gBYCZn/S6qpi1i1QIDTrUW8ndvJGWbG0mxQejbatKcQ8pH3xMSm8jcAAMP
      VBezf9N6VmuLWD7Vi9u5KSwoZVb0n3jBU88vlnx2b0xhi/vfWDjOtX4z69lVNY1FqxZgcKrF
      kr+bjSnbcEuKJUgP5pzNHBgUQ+LcAAxOtVhL8thbVArDhvf0D1VgF0OgS2QkxhEX1/xfssnc
      ZBlvpsS9gnGUJ3od4OTD2FADVdV17+pGPMWTF49ysrpxjYIjh/EJDan7cBcdJj9wFlEBBpwA
      nAwERMUSXvxNs3WaKvifHNyj5mGsX0en92XivH9nYLaJM1rjcgER0xnlqUcHOBkCiJr5LOZD
      R7kBQBGH8wOZFRWAoa5hDAFRxIYX8019w1VVVQzwHNLwvusjo5geLh/+3mIHR4DuOAn2Y8wT
      Zv7x3Q3GRQwALY9jJwJ4ckbd3/YbP50nb3c2cbvbaPs60Krty1wo7o/fhBbHBr0/Ix7Npuwy
      BLfX3yGP4ncpjzJgwI2fOJ+3m+zWDeNd37Dfk1Pos3Y5i78dTmhwGKFhQTz6kJ47jMxEN7KD
      AHSPISGhXN9xjGsRExnw/Qnyg8cRXf8pqqmpwTsyiYTeutSk1/NgXcPUeEeSlGBsnbHbBofz
      xntPYC2/yI9nT2Na/yk/+89j2Qz/todmolvZwRComwwJ5xmOcfKaxpkjuQSOGdHwV/ThIb5Y
      Tp/jWoc39jBDfG/yY5G1+cvVBeT95I3nw+2vqeWdJd/HG8+6hvG1nObcXRt2wnXQUEZOiGRB
      YjzBuYco6HBfxb24fwKAByFj4ND+rzh8IZzx/k3eGj6O8IpdbPoyH0stgEb11fMcTM/iTDtb
      858wiZsZH2HKt1ALaNXF7Nu0kyuTjQQ1GZ/UWiuo1gBqseSbWLf1AhMjx9T/9R7OuPAKdm36
      kvy6htGqr3L+YDpZ9Q2fyUplX/7VJts4SYHzQDy68Scj2mcHQ6C6k+CMli934Ztgj6eexiM+
      ndIpyxnS9A2dH9PfehOXbdtIir99uXEY46bNZGx7Gxs8ifhXNdK3JhHfcBl0Hn8wejUbnxfu
      Wc07n5VRUVN/CfPVeIwN11Z1+E1/izddtrEtKZ7yKg2dyyCGjZvGzPqGh4YEkrfzfd5eV06V
      5oybbxjRr8c077/oMX1u3bp1y9adcFRmUzJfeybQm3dPVFZWEr0iq/cavM/dR0MgITrPDoZA
      orMy//qSrbtgVyoqKnBzc+vSujIEcjCVlZX07dvX1t2wK/cSABkCCaVJAITSJABCaXIS7ICk
      Jrj7yBFAKK1HjgBmUzKJGZdavR42P7WXvjTKJS0uC6+O3mVqNpH8tScJd+qc2URyYinTUucg
      VcP3jx4bAvXq3ZetBDMntZs/poONJKR27yaF7ckQSCjNJifBZlMyHzK3+RGixbQkDffZDC8k
      c+N6sn8IYm7qHILJJS25hPCXXDiwy8Sp4gpqnL2YMH8xM0bcrqPNJS3uOKMbhisapfs3sTHj
      XMMNaYGTX25Ru1tL+dHP+STrCIXlVeAeyIvxC4i4fWOb2UTyhzC34d5+M6bkrxk4byTnP8ni
      SGE5VbgT+GI8CyKa3DBnLWTfjs/YfeJiw014w129eertGXV9k5pgm7Lvq0BVRWSu/xTLhKWs
      +Q/PxgKRS9nsODCFyNgVzPbU88vFTFauyaRgbQz+bW3HnMPmA4OISZxLgMGJWmsJeXuLKGUY
      DcWHx79ga7/neH7RKoYaHuDm0TQSt39LyOIIBrTbweN8sbUfzz2/iFVDDTxw8yhpidv5NmQx
      EQMArRRTynpOB8aRmBKAwUmj+uo3pC4ratI1qQm2JbsOwP9qg5izNLH1G95TiHulscpK5zOW
      UMPXtFPeC4NDeMZ9LanvFjI8NJiw0DCCpoY3r7gaHc2SGY3nDf1Dw3jMVEYV3CEAo4leMqPx
      pLh/KGGPmSirX8mcs5mLk1ezdHTj7dH6hzzoR2MABoc8g/vaVN4tbCyJnBoutWC9xa4D0K9f
      dw0DBhP+xns8YS3n4o9nOW1az6c/+zNv2Qz8e/izptPdpbpXSiJtSqmTYCfXQQwdOYHIBYnE
      B+dyqIfrDt3dPSg8X3T3BaUk0mZsEgB3dw8sF4vryhNrrZScymTDztyea/BMFqn78rlaV3dI
      rSWfkwXODOzhukN9yHiGHd7C9tzbZZVlnMrcT36zrklJpC3ZZAikD4ti+okNJCzcQo2zG76j
      jDw/KYjThT3U4NAQAvN28v7b6yiv0nB28yUs+nVierruUB9M7KLrbNqYRPzGKnDxYdzvxjCM
      xi8JpSTStqQeoNflkvZaLmEfxBLUhbWlJLJ7KXUO0OsuHyPLdIoSa+OMEPlf7iF/dDBykdM+
      yBGgJ2lXOP7Ff5NxpJDyKg2c3fAdFcnMl8fj49S1TUpFWGtSEqkQCUBrUhIpRBdJAITSJABC
      aXZ9K4Rom5REdh85AgilOd4RoOmzvjRwdvPEL/S3zIwKZVAXLy12WasagbrHvmZ52bIaTnSG
      YwVAK+LLlZsw/+ZN3p37CK5OGtVXf+LY3l0cKAjlha58tdrNguekSs2wA3GsAPxwhG/dp/Ln
      8Y/UV3Lp0D80lPEzlti4Y8JROVYA+vdnwNXLXNZgQHu32bcxLGlVImk2kZzRB6Mhj4yD33Ol
      xpmBI6cwO9bIMNcm27nbMm3ITYvj+Oims1/IY1LtmWMFwOsZIoclsmZZGZNfmMrTwUPrn67Y
      BYUFlM6K5k8veKL/pf6xqVvc+dvCcY11wh1Z5i7kMan2zcGuArkSPGclf44ZzuXs/2L5wtdZ
      viGTs1e0u6/aUkAE0xseu2ogIGomz5oPcfRGJ5e5I3lMqr1zrCMAAE4MGmXklVFGtOoyzmbv
      ZFvSe0T8cWmTRxN1xRAe9btEXhl3KALuyDJNyGNS7Z4DBqCRTu/JqOlv4NPvPf6y/weMMW3O
      CdEJevQPdscy9eQxqXbPsYZAmkZbg52+fV35v5rae9x2HmfzffD2vMdlmpLHpNo9xwrAme2s
      2GziVImVuo97LdaSg3y8q5jxT4yoW8bdHQ/LRYrrCo6xlpwic8NOWlUc11qpaFIjbFq3lQsT
      Ixmj7+QydySPSbV3jjUECpxMZFkWe9YtJ/V6FRrOuHn6M3FuApP+tX7UrA8javoJNiQsZEuN
      M26+ozA+P4mglgXHhXtY/c5nlFXU1M8U9yrxLR6B2qFl7kgek2rv1CyI6ehs0HdbxgakJrh7
      OdYQSIhu5lhDIAHIY1JbkppghUhNcGsSAIVUVlbaugv3FRkCOSA5AjR3L0dFOQkWSpMACKVJ
      AITSJABCaXIVSChNjgBCaRIAoTQJgFCaBEAoTQIglCYBEEqTe4EcnLXQRPqWPZy+UoPzwJFM
      md1iUq3cNJLLfttirlIzOX9dy8UpCcwJdoQJuHJJi9vIP1u+HDaf1NsFS13cTwmAIzPnkJJy
      kpF/WMU8Xydqi02sWZ2CbvkyJrU7DYVGqelj9v0qmgSH+PAD5jIuDY/m74sjOjQbTZ2O7acM
      gRyWRt7eHPrHxDPVV48OHXrfqcTH9Cdnb16bs2cAaKU5pO/3Yubvgjs8u53NmUuxeA3uxIe/
      4/spAXBYFyg458vokOa/XteQ0fieK+BCW6topZg278N39iyCHGjSIXPZJX7t59vxFTqxnzIE
      clg3sFR7MKLlL1hvwKM6j9azN2oUZX7Ad48tIMnfseadu/yzmTMZ8cSlA+hwcfdh9HMziRrv
      08Zf987tpwTAkRkMuLd60R2DofkrlzISicsA9GN57T/9HG7axaDYD0iNvf2/Wqwluez88O+k
      VPyRpU2mqenKfsoQyJFZLFxv9eJ1LJbmr3hHJpGamsLCkDx27i5q9/zAMTjh+kgosW9Gotud
      Q16Td7qynxIAhzUAg/4aluoWL1dbuKY3tHHCqCdo1iKeKthEeq61d7rYkzweYmCbU2V2bj8l
      AA5rCP6BxRw/2fyXbD15nOJA/7ZnltN5YZxnxJKWQo65VzrZDaxY2/ocX7vKlb4ubU8g3In9
      lAA4LB0jnp3Eze0pfFVcjYZGdfFXpGy/yaRnR7Q//vWIYP6cX7HvYxOlDjEWOs/O5UlsO3ie
      q9UaoFFddpT09zPQjBNodz7wDu6nnAQ7ssGTiI/XSP9oCa/d/iY4Pv4OX4LVcQ2OJb7kXdak
      e5I0x96/DwhiVvKD7P/H56z8vJiKGnB282VU5FssGX/nHe3IfkpFmFCaDIGE0iQAQmkSAKE0
      CYBQmgRAKE0CIJQmARBKkwAIpUkAhNIkAEJpEgChNAmAUJoEQChNAiCUJgEQSpMACKVJAITS
      JABCaRIAoTQJgFCaBEAoTQIglCYBEEqTAAilSQCE0iQAQmkSAKE0CYBQmgRAKE0CIJQmARBK
      kwAIpUkAhNIkAEJpEgChtP8HopgGvsXBvHYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='filters based on measures' width='192'>
      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
      deAZksMyIQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='interactive filters: used for editing filters with ease' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO2913Ncx9qv96y1JicAg5xzBggIIAECBEiQlCjp2znIdvmcOlU+5f/DVy5f
      nqpz5bKrXOU6Llcdf2dvbX1b0pZIiklMIACCAEHkSOQ8Oa7gC1CkuEVKIokw0KznCrMw0+vt
      mfXrfrvft7sFTdM0dHSSFPGoDdDROUp0AegkNboAdJIaXQA6SY0uAJ2kRheATlKjC0AnqdEF
      oJPU6ALQSWp0AegkNboAdJIaXQA6SY0uAJ2kRheATlKTVAJQVRVVVY/ajOcoipJw9iRadrws
      ywdaflIJQNO0hPqBVVVNKHuSUQCGAy09AfnPf+llamn3qM0A9gSJICActSHPSDR7AFRNQxQO
      zqJ3FsBk/9fMhAr4oLsewxvYuT56E2/2OaosmwzMBWlqKDkUNW57wyxv+Q/hTjrHgXd75rQo
      y9syRvUp26Easu0SSjxGXFGQZQWj2YLJKKHE4siqjCxrmCwWTAaJiHcDXxqQlkZDVRoGNBQ5
      TjgSBcGA1WpBRCMuy6hyHFkTsFqtSALIcoxIJIZksmAxGZDjUaIxGcOz16ocIxyJgShhsViQ
      xERq03QSiXcSQHxzjEhKI9W2ZTY2d8i2Z7I+eJkbGxbcQpCQ6uLih90sX/+ScYMdS8iPbCrg
      /Q/aXhSyO8u/PY7xSU81CyP9jC170GIh3PVdnMqBz/5xFVdKBiHPDgVtH9GcDTevXSdmsGJx
      F3G6OoMH/UOE4zLBiJkPf/s+T/uuMLUJJpOZ+pOdFGfY3vV70vmF8vYC0BQmRtaoOlVPXjjK
      9ak16ksyATNNXeepSxGZG77F3LIHs+Ci7fx58gUY7f2axc0IlleYkltcwrp/ikgozPz0Ci05
      eWSUNHCurQlha5QrK2E25CWcZZ201eUAMD90i92gTKrLhrI7zqOFLmzhCKk51TRUl+F2Wd+6
      ijq/fN5aAEo8wszSHKGtTzFoCr6QxGZrAwCiICAIAqIkPZ9mEkUBAQ2DJL2yPDXi427/COX1
      zdiVNXaHIiiAIIjPBkF7boyqqEhGI8KzgVE8JpNVXEVVfio0NOJIMSHlXmJrfZ3Rvhs4ik/S
      Upn1ttXU+YXz1gKIehcwl/Twm+5aREFjYfgWi4vb5KGy+nQOoyHAzHKc1rMuNiZjLM3N4Q9u
      MedzcMZtZmf25fI0TUVWVeRokJWVRQLRtFfe152Vz8iDQaYM5WgYycjJZfTxAplOCS28Q9yc
      QWhhHNWaTmqKk3A09rZV1EkC3loAksnNe81u9saXAjnlTVgjEvKuRtjvwWMx0dLRQYZVYgOV
      gGcHSbRzuqMCp1FArGzHaQfEXNrrFCSLi47mWiYXt8gseY/zJRbMVit15c+cJWc+jUVG7KkW
      uk6JTM2vkZJXRmpuPmcNFuZWdjC7ssh0Qjg3h7mnGwjOApoq8/fli9L5ZSLs98ZYKw+u4K2+
      SG3Kd86Pwtjlm6RcukDeft7oLVAUhTsji2z7IkdsyR6qoiAIAoKYGPFIVVEQRPG5e5kIyLKM
      wXBwE+T7LoDvinvxJWpoGgkRYFEUBQDpNeOQwyYejyOKYsLYE4vFMBgMiAkiSIBIJILF8sMp
      k/1i36X1w9ZDIIEaFB2dl0i6VIj/8+8PmVn1HLUZwF5vuTeE+vktxH9/vp6TNUftTP5yOJ4C
      0GSm+m+xLBbT3VKO9IPnRyUSimJ8Fjn+PkubPiYXtw/L0n3HG0yM8csvhcRx9t4AJRpmcldF
      2RonHNvz67/L9NxLeQ7T9803bIYVVDWxsht1Eotj2QOEPE+xppRRoM6z4otQlWlnZehrJkMZ
      bC5tUlZmYHBsjPlwnKrGU7TXFhy1yToJyjEUgMzy5AJ5DR9SHA9ybXqV8swKlFgULyn8/k8t
      GMUokbUYVe//iqyDm0DQ+QVw7ASghDyMzi0TWfsrj4nhjTrwvleGZLZSWVKB6YcDAh2d13Ls
      BODdWiOttpvzbTUAPLn/DRvbPpx8fwrWgCRFWV1awZSTRqpDT4jTeTXHbhBssLmpryp+/rq0
      uoFUq4HU/FpyHN9dNXKivY3I2ixru6EjsVPneLDvkeBERlEUvhmYZcMTPmpTgL01wQjCGy35
      66gvoDzffSD2JGMkOOkEAHoqxOtIRgEkTk11dI6AYzcIflf+y+VhFtZ9R20GANozFyhRsi8T
      zR7YcxMPskc6VAF4lsa5eX+YmCZgdmbSebaLdGuUsYdzFDU14PgJaxYmn5BRVo/9HayeXtrh
      8dzm2xeg84viUF2g0G6Yys4LfPLnP3PhvUxuXOtHwU5d608//ADbq8tEE2cjNZ1fAEfiAmmq
      TDAYxO5wIbDD9U9HOfmHLrbvfc6Ax4wQ3AZHIR9e7CS2Nsr1+yMogglZFShBYW1ymAejs0Sj
      GpXt56lNCXFvYgXJs4KYd5KM+ARD0ztIVhdtXecodOtxAJ1Xc8gCCNH3zZeMWCyYbak0tNYi
      EkORZTQATaL8vTOcyDbz+O4VvIEAk2ObnPv1H3FbJAZuXkGLeBmcXCa/tBKD7GXq4RBFZyvY
      Wlrm1PlLFLkd9F3ro6yxjYqCDGw20+FWUedYccizQDZOXfwXPvnzn3m/s4GJ4T7i33NpBEHC
      7rAhChIGgwjxGBGLHbfV+Hx3CDUWxR+VsZiMmGwZtJyqxyJAekkNxekOBAHqWzqxybs8vH+b
      qdXEGPDqJCaHLACNaDhEMBgk4N0iqpp/fC2IyYYrvM7Y4hae9XmWtqNINhdZJgXZmkF+biZC
      PI4m8NJMwdbWDllF5VQUpbO7mRiLX3QSk0N1gZzZaYwPjnBrQsBkd3OhpwOjGKW8oRQzkFpU
      gfLMY8kqqMBis3LqbCf9d/vYsOdRf6IWq9nOmYsXGOzr5+6UgZrmU5itCqV5L3Z/c1glhvvu
      IbpyOdVacphV1DlmJF0k+PN7k6xuB4/aFGBvjltIoHn3RLMH9n6zg4yUJ50AQE+FeB16KoSO
      TpKRdKkQ/+3GKEsJcj6AqmrPXI6jtmSPRLMHQFFUJCmBUyHWZwa5/2gWGYGUnHLOnG7C+rN6
      dI2tuXnEgkLcxsPT4ePZDT0VQuc57yytnZ0wLec+5Pe//y21bi/X7k7zcwcVnqUlfLLyribo
      6Lw17970CgKCKCBoKrICVqsJLerlzs2brHiiWFNz6T7biUPZ4uaNO+yEZJyZpXR3tTwvwrM8
      wciywqmWMsbuXmNqPUhafjWnm0oZ6b3O4lYUgyuXCz2nia0Oc6tvGk0y0dT1AWUpcR4+eMDT
      DR+m1CI+uNDG6shNBsY3EK2ptHd3k5+qr4zXeTXvLoDoDte/+Ayz2YAtJZOW09msjT9ALGrl
      jxdz2Jjq5dHoMnnhCdIbu+nJT2H+0S1G5nZJJ87S2CDTfomTbc0om6OsiGX84U9VKLEooiRR
      XNlIVonK/KNhln0hDBurZNW0c6LEjcFkYm3+CT4hlabmUlaf3GdktRllY5uqljMUZ7swm5Nu
      mKPzBrz76MLs5vyvfscnf/4j7dUZjAxP4t2N4s5wYZAkXJlZKAEfuyGZzDQHkmQkLSudqC8I
      KHg2N4kbbdhMBmLeHWyZeUiiiNliJeJZYvjxNDs7HmLxIIGwQlHNKZzxdQbv32RiyYfPs0Mo
      FMbr9WErqKfQJVB74iTyzlP67t1hYUtfE6zzevZleL23KxvI8QgxRSOvKJXp0TlC0TALo+PY
      c/MoyrbyZHKJaCTA9Og8afnpgIWGs+9Tblqnb2wJW24p2+MDhGNxvLvb7Hp2sGVX0dxYiSTH
      0DTwef0U1zbTcbqG1amnpKW7kSUbdSeaqCxMAc2ILxiluukkjRVZrC3rA16d1/POgbD1mUHu
      Dc4gCyLO9CLOdLXiMMDS2AP6x1fJqW6lva4QAYWph3cYeeqlrKmdptJMtmbnEQsLcUsyUyNT
      ZNbUI2xMcKNvnMzyJlqrsxjpvc2i30hNSS6OvFJc8VV6HzwmKKbQc/EcqSaVxfEBBsaWsGWV
      c66zCd/Tx/QNTSOlFnKmsxWHcW9eT1EU/pf/64Y+C6TznKSLBP+3G6MsbiZGHOCHZykcLYmY
      CnHQSyKTTgCgp0K8Dj0VQkcnyUi6OcIv7k2yupM42aAgICbISfaKou4dZ5tALtBBZ4MmhACU
      aIDRoYcse+KUN7RSkaow5zdSlu36kU9peJYn8VmKKUr/+V3kg7EVfRCs85yjd4GUEPeuXiWS
      UkpnezMmNYoW2mR61fuTH3VmlZCboq/51Xl7jrwHCK5N4Ump5OOqQiQBXCnA1i47SxNcWR5g
      NyzSceljciUP3357j+1AFGd2NT1djWyNPcSfc4Jys4/B+S2MvmXCKfXkG5YYGF1CtLpp7+oi
      N8V81NXUSVCOXAD+XR/ujIofnOVltLnpOHMOeW2Q4fld8qqsVDW2IgoqUw96WQk1QtBPOK6g
      GeIsTIxTd7qHpsJMer/po679PPmpZiTj0XdyOonLkQvA7rTiWQugaS8fluh0Z+IwGwlarYge
      De/aLEPjGzjsFrb9G6QFwfG9cjJK66gvygSgtu4EozNPeBqKUP5eF+UW4+FWSufYcOTNozOv
      EuPKY0ZXPKhylPXNHV61+dv66jalJ9poa67F/opWXfzeTEFYMfDe6S7eq85haWH1AK3XOe4c
      eQ+A0cXZ97vpv3+bv/YqVLecISs9hXz3nt9usKSR7bZSUl7PtzdvMGNOp7iqkTQLWLLykWxG
      RJOdnPQXrbwQ3eXq5w+RXLl0nmk4qprpHAOSLhL8Xy4PM7/20zNMh4GmaQk1555o9oCeCrGv
      6KkQP46eCqGjk2Qc/RjgkPlmYI4Nz+EukqkuSudUTf6h3lPn57EvAoj6t3j8+AnB+N7r/OpW
      KnIcP/6h1xHaZMZnoTzHuR+m/YBbQwuHngrxq9OVugASlH0RQGRni4DRRW15HgA21ztEXr1P
      eTiffmAC0NH5PvvkAgnYU9LIzs5+fiWwOsfQ/BKBrS18mouPPr7AwvBdcmvaSbdpjPX2k9nS
      Rnj6IYMTTzG48uk4c5K07wpQ4yyMDfJw7CmiI5Ous2dwRpa5OzJPaHebmNFNz8WzuMQwY4P9
      TCxukZJfy9n2OramB+gdnkOwpXO66wzZTj1fSOfV7JMA4ozdu8380F72ZmP3r8mJBPArFrov
      /Rrv8D+Y2BJIRWVl24sLmPXHqYot0r8q0tlzgd2FJwyNPqUnd6/E8PZTRtdVLv329yjbj7l1
      Z5xzjRJhKY2Lv+oiOHeb+0OrNKdv4TVmc/5CA7MPrjO6WUVwfoHGrkvk2EFLjAkWnQRlnwRg
      pLbjIqeqSp5f8cxJZOTkYDcbkR0WVA2KS3K4PLJCLgquzFJim4vMraxBfBOQyK2yA7sABLw+
      XJnZ2E0GyK3F+vAmcaUIR0oqZoOEqaIC4fNNNuVlFpbi+NbnEQQXNQaVguoahh73Mq0K1LSe
      waGfkKTzGg51FsjoLiFP/Yp7gxItHzRhURXSrCE6enqwyCF8sgDPDnF3paXimV3GX1WIsj5E
      2FKMSdJQFQVVibM48Bhz5SkytQguxcqFzkZk3yoRkwk56qLzXDX+5SeMzS5TnF5xmNXUOUbs
      iwCMNgtrA3f516E+ACpPfUClzUmattf0Gp1ZpFkAwUhhWQHr80ZybQKCVkRXwxY3v/wbWNNp
      PX0aLGnku22Y3em0lHm59sXfkFz5nO2uxLA7yfJYL59OPyQ1v4buKjcGpYnSQC9///SvWN2F
      nO3OJ+Rd5fL9XkRHNqc7a/ejijq/UI5VJDiyNkbflp3uhqK3+ryiKPwffx9gduVwj00601jE
      77trfnBdjwT/NAcdCT5WAlAiPnaiBjJTbD/95ld9Xk+F+FGSUQDHKhIsWVxk6vvc6uwjx0oA
      +8HdkUW2fZGXrnWdKCLjLXsVnePNvgkgFvYwNTZFSAGwUHmiltQE3Jn56wczP0iFqMh36wJI
      UvbN2QvvrjG94iUjI4OMjDRM/7zI9zUMD9xlwxfdLzN0dN6IfWyiBRzubEpLS5+9VlmZGKDv
      yRyaMYWOC+fJMATpu32Hpd0YRQ0nKTNtcevWbeyjC+RVtfBBaxGj/feYWPJSWN9KS3UeS4+G
      2BIiPJ1ZJa+ug1O1eUR2lrh3v5+A5qKtu5NMKcDEig+Tf4ltUxllzl0ePJxEs2XS0dVJpkNf
      E6zzag5uuK+phENhFFUjsDbC19+OE/asMb8ZoLiqjtw0KxllzbS818ilX/2eD9srWR76hs/v
      TiHLQW5+8W9MbwbwrC2huiv53R/+hdjCCJ6Ah8uf/oXZnSj+lcd89lUvoXCY5dU1hLQy2hsK
      WZ2dJG7Ppr62HOMrVxjr6OxxcE56aJ3xDZEPfvtH7IZVvvx0BXN2G//dn4pZnh/j7u1F/vCn
      iy99JBJU+Pjf/0easr5rseM8NqRQXJyFBDhsAlo8hljQyn/8qPu58bGdp1ic6VSWFQLQfOFP
      VHk2GR7sZ91/gs6GggOrps7x5uAEIJqQ4h6GHj5ACa3iowDf6gzj0yuIIpgdVkQgw2bk0UAv
      W6VVVNfW8tm1LwkWZSFjoL7+h1Fc0Z5GhSPAPy7fJMNpxGTLprrwZRdn9MENdmULcdVAikXP
      BNV5PfsWCFPiEUJRDefzzDONkHebHX8Ue4oTUZFwOI14trcJxVRc7kxSbCaUWJjNrW0ESwpZ
      aXaCnm12AxHM9hTSUx3EAkEMLidGIBTwYbK5ENUoW5ubRBWR1PRM7EaNUEzFYdsLEkSCHnZ2
      /QgmG5kZbgzijx+Q8b/+zxdoKMvaj6/hjdADYT+NHgneRxRFYWJxm2Ak/tL1mqIMnLbD3z5R
      F8BPo0eC95nqwvSEeeB0jp7EkbqOzhGQdD3A//b/3GZ0YeuozUhINCCxtsU6eJveSACRtTH+
      v6sDWM1mRIOJ0+//jvy3WLseCawytSDTWF/48j9Umb6HQzQ3v4fRID6/NvXwMRktTaTtg28a
      ick/GAPoJC9vJAA1HiGjuoN/OVX+/Fog4MNic2JAwRuMkuK0EwoGkEQIhBRcqRaiwRjhcADN
      YCM9zYXR4qa0BEAj6NnGG4pjcaSQ5jASDIUIercJxxQcqW6cFgO5VRVYBQE5GiESjxEKBMHk
      INPtRNAU/N5d/KE4RqOF1Mw0hGiQ7R0vmsFCujsN489My9BJPt64SZXjUUKhEKFQBEWDB3eu
      4QsrEPFw+c4AAI96r3D71rdMLGzg983yt//6BWNTs9y/cYO57QCBnVnu989CZINr1+4xPTPN
      2JOZvdWQ3hXuD44wPTbIN3dHkLU4vddv41M1tmaH+eKrbxifmuLWV1fYiMHu4ig3vn3AzOwk
      1/7yNZvAaN91hsammRgfY80T3t9vTOcXxRuPAVYnB7m2M4tkdNJ+/twr3xPa9VLa8zHl6RYC
      3mnKT5ymo72ElceDeOLR791VIRqJY0vPo66iBBsqpORxoaMTkzHA7cuTvOysWKlv66ChKIfl
      3svsRCDydIX3ut+nIFXj/uoVAORYFFWyUdNQS1aanuWp83reWACF9adfcoFehT0zj2znz5hX
      t+Tyuz9+xPryDNe//JKWDz56U3NABIMoAfLzS83nfotve4MnD28wl9fC6drcNy9XJyl451kg
      p0lgdGQIU2SD1Z3v+9o/w+/2rdE7toTTLGG1mt5qtJ+V5mLwwT1y041Mr+5QBEwN9RIUnYgm
      6/MosI7Oq3ijSLAS8eOJGUh3vdhoJxrYYXFlC7PdhWQ2k5eRhtezg8PlRhJBlkMEgwIpKVai
      AT+y0YxZiOMLgjvFzMbqEp5AHFdmLtlpNjxeHymuFERRwbMTwpnmwLu1izPDjRYKEpNMOCwm
      ot4dZLsbY8zL6tomUTnOVN8Ubf/ut9i9m6yu7yJYnBTk5zxfm/C6VAid5OXYp0JsLYxwt3+c
      qArO/Foudda/dmSvKApD02t4Q7FDtfF1KIqKICTQQdmygiiJCXVIhhyXMRgPLlx17AXwJui7
      Qvw4yZgLlDg11dE5ApIuFeI//et9Jhd39r3c//BhE10n3m7DLp2j48gFEN2c4uGWlY7a16/a
      2hobIFDYTInjR1yFeIjrfU8433nqR+/n8UdY3w2+rbmvJRzT0yuOI0cuACUaZNf/vUGXphIK
      BojJGiaLDavFSCzgwRMI4pU1TFY7FrMBNIWQP4CMhM1uw6gqbO3sbXmoxKMEQ2E00YjdbtOn
      QnVey5EL4AcEVrh5ewRJhEjcSPcHF4EIowN9bIpBfLKDix/2EJsbpH9hFzEawFTQRE9d5vMi
      xvquMrsrYTKZqH2vneIM+9HVRyehSbxBsCObytxUJMlAzPeUNU8csNB85hzvf/QbWookZmZX
      6HsyhUkUMFgtrA4/Yvt7Hkg0EsGRnsfJtg6K0vVUCJ3Xk2A9gMba8D2WpQKaW6pYGPYTl79L
      cRAQBAFBFBA1jZhgo621FQMgthlxGF7M5p448xHbG+uM9V3HWtTKyarsV95NRychBODfXmF6
      GkSTA4OqosTDbK0FmF/ZoaISEAXWF6aRFgPMLMm0n8vCtCkxNLFEsdtINCpRXpXzvLz5iSfI
      5jQcTgfxuPz6G+skPUfuApnTS2gocOHz+fAFwuQ2tlFgkYlLTs5c+JBit4m0yhPkShHCqoW2
      rk7SbWbqznxAWYpGIBzHnZeLxWCho/UEADn5+SiRIKa0Yppq8o64hjqJTNJFgu+PLrHj3/+9
      SJvKsynKTnmjz+iR4J9G3xVinzldV5AwD5zO0ZM4UtfROQKSrgf43z/rZ/qQzwh7HZqm7a2B
      SJDsy0SzB0BTVYQDdMkSRgBh7zJX/nGdqGTG7Mqite0UeWm2fd8SY3U7wOzK7j6XqnNcSRgX
      SI5FsObW88knn9BzIo2+24+JahqKHCcWiyHLCpqmoakKsizvXVNUNG2v5ZLjcWKxOKqmARqK
      oqKqCnFZOeqq6SQwCdMDfB9XdiFp4iiRsI/+29fZCkFUs3Hxwx6iTx9w+9E2NouCX0jlNx+d
      I7o2Su/wHHE5SkphC2db0/j2y2EEW4Cwo4KP2n94RKmODiSUADS2no5z926YsHcLa+lJXGYb
      peWVSOte1mfmWPGFSTdaqGnt4kSFm7neq8xu7xJ4OIYhI49UQWVsYohTjd34vDvUt39Aaabj
      qCumk8AkkAAEbKmZFBcXYzDXke5Owbc+zui8n5rqYgz+DWJRFRAwSCICYDYZ8WoxIjEj+UUl
      pBkESirrsRohNbOY/EwneiKozo+RMGMAAJsrnfz8fLIzUjGIAnIsimAwIxJjfX0LRQNUme3N
      NZYXZ3i0FKEwLZ38AhOra14ENHZ2d1E19ta16g+/zk+QMAKwODKpq3p5r1B3Xg3FboWnK16a
      zl2iPMMGmoJ3c5X5pW1azvaQbjNT2XaeEluE2YVFnKmZSKKDyroi9KPxdH6KY5cKsTwzgEco
      o74s7Y0/qygKNwbn2fQmxnaJiqoiCCAKidEOKYqCKCbYrhCyjMGg7wrxHFVV0BCR3sK513eF
      +HH0XKBjgCgmxsOi88vg2AngXfm/v3rE3JrvqM0AQNP2ZrUSxeXQVPXZ5EFi2AOgquqB9kiH
      IwBNQ4l66btzhyVPBHd+NZ2nGjBpMRTBeKj798+uePStEXWec2g9wMNvb2CvOccf8xxsriwQ
      joFn4iozrnOcKdMXrescDYcmAKvRwPr6GmXZVWQXVqAEV/jXOyOsmz3szBTQ3dnO4qPrPFny
      I4gGmrsuUmQKMTAxTnRzC3vVGYqkJe4Nz6OoAnm1J+lqLGZ26FsGxtfQUFBTS/kfPmxl5M4N
      Jtc8qKKNUz0XKU47uEGUzvHmcAQgQE3HecThfr767DEpeTV0tjfSc6bheQ8Q3JpnLZbOnz/5
      ENU3x9V7k2S15bK2uMGZj39DjtNCxCdRV2MmFPQxNjdLV42V6WUDH/7hT5gj21y+/wRlZ4aR
      DagqqyC0s8KTJ7MUd9UdSjV1jh+HM9+lgWSyUXvqHL/73a/JjM/zZMn/0ltkOYpktGMQBUxO
      F6ZYBBmRnIoqcl1WBEFl7GE/PsWA3e5AkaMQD6M50nGYJBBEBAHiAR+yyYbDbiersIr3agtf
      Y5SOziFGgmef9DO7tIHf7yMQVrBZTZitdnbWlvH4/Jjs6cQ8cyxu7DI7/BgtNw8rwveCRHFC
      IY2s3GwsQoRgWAFLJgbPJLPLm6wtzeEJgSWrCGtwG5PLTZrdQiyeGFuh6yQmhyaA3Pw8NmZG
      6H80TkbjWeqyLaRVtFNqWGd4bAbFnM65M03MPu5nlTy6W0ow25wU5393vJGFhpZqnj4eYodM
      LnQ0gGino6uF9clhFnY0nDbAksOlnhMsjj5idGEDp8t1WFXUOYYcu0jwy8QYunWT9aiAHA3i
      LmvjdN3rzwNTFIV/9E6ztrP/m+O+DeqzefdEiQMkmj2w95sdZKT8mAtAIxYOEgzHEAwmnA77
      j6ZI6KkQP46eCnHsEDBZHZisP/1OHZ1XccwF8Ob812tPWNxMjFQIVdWeuRxHbckeb2pPQaaL
      f/fBiYM16oA5WAFoGrHgFne/vcNWWKDiRDuN5Tm8deZD3MeTyW2q6ksJLQyxZqmmOvvNusfR
      +U09FWKfqC3OOGoT3pmDdfZkPzev3qGk42P++JsPcOIn+i571Soh5udWkYGU4qY3fvh1dP6Z
      A3aBBAwCeDy7FKTkUF5RCbFdvrk8TuelDqxscu3v83R+WM71y/eQiLMbiFF75kMas+L843Iv
      EjE8wTj13R9Tn/6i5NWHf2c17zc0pezS/+ABS5s+DK5CLr1/mtXh6wxMbiJZU2nrOkuBngqh
      8xoOVgBGB23dbQwO9PGXfoWa5nbqC0xEIzH2pp6Uvb81FSzpnD13Ckne4pvrg1T01CFYM+np
      aUWMbXL1xkMqeqqfF63GI8QVWJufxEcKDY1FrI/1MbLagrq1S2VzJ6W5qVgs+sJInddzsC6Q
      Bra0XM68/2t+92EXS6O9bPpffZicZLJgMUoYLRlYpSCKCpLZgtkgYbRmYBH3rqJ75loAAAk/
      SURBVP0zfq+HWFwmHI7iKm2iJEWkrrkN/Cv037vN3EbgQKuoc7w5WAHEgjx5MspuMAqChqoI
      iEYDRiVKIBRmaXySnWc7t6lynEg0ysrEXSKOKqwGUOUYkWiE5bE7xFzVmF8xXZ6R4SamGamo
      rqU4y4aiGvD4QpTVnqCuLIuN1e0DraLO8eZgXSCTlSynwIPrl4lLNprPfUBWqpXW1nzuXrlC
      ZkU579U7MADhrXm++XoFS2Y55zsqMMQ2CW7McfXrFaxZ5VzoKMOgBCivyMcAOPNqyHNCRl4L
      p+RHXL/yNbaMUrpOg383zr1rV5BS8uk4XXqgVdQ53iRGJDi6xeXeJS6dbX5xLbLB5b41LnXv
      3zyzoij89dYYy1uJ4RYl2pLIN02FyM9w8sn5+gO16aAjwYkhAFXGH4rjdFh//No7oqdC/Dh6
      KsRRIRpwOgw/fU1HZ59Juifs3+5MsLKdGC6Qqu51vmKCbGCqKOqzjbGO2pIXHHQ26BEKQGNt
      apCB8WW+m900OPK5eL4F0z+90788SyS9hEzLi67Zt/QEn6uegjdM9x+YWNVTIXSec6TOXmZJ
      Axfef59su0zZe2fp6Wh45X6e/pU5NiMvD1X8y6Ms+1/xZh2dN+AIewAByWjCagST0YDZbMFq
      MUF4i6vX7rAbiuPKLuNsZwsgM9p7jXHfLo68GrpPv5gZUqI+hvofMLfmwZZexoWzLayP3aFv
      dAXRmkZ7dzd5Keajq6ZOQpN4YwDJQlVjC6KgMvv4AUu+JuxAUX0HJ3OMPL53jZm1Mr7bGndj
      fgqfmM6pU5UsD9/hyXojsdV1ak+dozDdisGUGDMsOolJgglAw7c6zdDYDm6Xhd1AiNRwDDsG
      HA4rokHCnZXGZjDy/BOenQ12t40saWFILyXHBraGZsZnJrk/EaS06QwVOfopMTqvJnEmfAHQ
      2FxYp7i1ndbGSszii+uyLBMPbjExtUH6905kz3C7EW1ptLa1c6IyF4NoJBSFprYOmqtzWF5c
      O5Ka6BwPEqIHyMgtwWyRAIHStpPcuHqFRUsWJdUNpNgl7PkljPR+yVTcTGPbWYpcRrxZ5WTZ
      ISO3hROxfr747G/YMkvpOVOCd9PHN59/hpiST9eZxqOunk4CkxiR4ENCURT+36uPWVhPjCWR
      iXYwtaZpCZOW8R0HvTt00glAVdWEST2QZRlBEBLGnng8jiRJCZUKEYvFMJn+OTK0fySEC3SY
      aJqGqr5iYcERkkj2JNv3k3QCkCQpYVrcROsBNE1LuB5AVdUDPSMscWqqo3MEJNUY4LuqJspA
      T7fnpznogXlSCUBH55/RXSCdpCbpBsHwoqv/DkEQXur+99sV+MH9gJeuCAJ8955/+vugOv8X
      NgkIaEdsj8ZLX9H37/nPl57ZsF+/UVIKQA6s8Y8vrxMRBOxZdVzsbkJeuMcwTXSW2ZjovYIn
      tZHTNa/fav1nE97k66t3CETjyLJAfecFGgrt3P7ib6yGBERLGj0Xz5NmXuXbmyHOXqxmd36I
      +0/ho3PNHNT80MSDL7gx6ONP/9P/SLoU5NaXX7AREZDsmVy8cBaz+pSBQZUzXeVsTPbxaMfJ
      +x21B2CPRnRnnq9uDBBTwV3QwNnTVfhm+vnqwTySoFF+8hynKtPovfKA+kvdOOJ+bly5RVnH
      u5//loQCUFgYHqSw+/c055gYuneDpxt+8p7917/yhLlQJudOZu/P7TQLJ89/hNtuJrA6xf25
      BSqFKN7MTv50Kp+1yYdMzizRXrf3aMnBDR5ObHKyq+eAHn6N0OY4i5EsKnL3Wk//whCxgm7+
      /F4OT4fvM/V0nYaCvXfLgRUG5wKcOttyIPZoSowHveOc/ui3ZFkNKIqKEA3RO7nL7z/5MxZl
      h5vfPMZT2vnc/snB+9jLWihMffe1wkk4BoiztWOmMNeGIBrISEklHA6iqSrrSzPcGpil5WQ9
      NsM+fTU2JxkOC7HgDhMzS+QVFLG7tkVeaQGSKJLmdhOJ7C3R9G4uc+9OH9m1LWQ5DmZHO1UO
      0/9omeaTNZifLcX0bO6QW5SLKIhkZKQSDIdAU/FsLPHtrQFKmk7ith1MW6nEomz6thi59RV/
      +cun3BueIxKLY7DZsBtFJEs6Ga4A/hBo8SCzw/eY9GfQWJHNfqwkTUIBaGiC8LziL3xIjWjI
      Tzimsd9xqcDmLDdv9WErbKSuKB1Ne5H+s3cy+97fciyMPxTFYDggx0dTWBm5SySlGC3kJRAK
      4vX4URCeP0zf96nj0TD+cAzjfjUGrzJJ01AEE209/8Iffvcxxu0xFnfjL9khCAIaoKkyAa8X
      RTTsW/pUEgrAhNsZYnUnjqZp7AY8mM1WBFGiqKqZS+0l3LszREjen9lhLb7NrbvTtPZcpL4k
      E1GAtMwU1pY2UTUNv8+LybC39Ut6fgWX3u9kYfAeG6/ZQvLdjFFRTGkYg0s8GRljeWOd2ZlF
      bG4na6vbaJqGx+PHaraAIJJZWMnHH5xm9P5ddoLvsq336zEYjVgFE7JBRDRYSXWZURGJBsPE
      VA1N9rHjteCwgmhO4UT3R1SZlxgYX/3B5MJb3X8f6nDMkCh7r5nP//Ep83YjqqWQi9kpqE/3
      /usqaKJx6ya9w7Ocayl/5xbCO9XPjDeEcPMqAFnlzbRUnsLy2d/4YtlBTJHoulgP7K1bMDhy
      ONNSwu17/fRc7MC2n52BaKS4rpXiOoAQhoBMTWsdbtGP+vkXfLngIKqa6bnYAtoiAEZXPmdO
      bPHgwRA951qx7HOTKRitnG0v48u/fIrTYUCyF9FT4CYjZOOvn36OhQjZdWdwP/cIBeraz3Hv
      mxtMpDmpyXu3QxCTMhCmaRpyNExE1rBYrBgNIpoSR8aAURLQFJmYomEyGd952k+NRwlGXhzV
      ajBZsJoMKHKMcDSOwWTBbDKAphCPaxhNBtBUYtE4RrN5X/zcV6MRj8aQTGZENGQ5RiQSx2i2
      YHpmjyyDwSg9s0fGaDYdjD2aRjQSIqbw4vfQVCKhEIogYbVYkESIx2QkkxERUOIxFEHC9I7u
      YlIKQEfnO5JwDKCj8wJdADpJjS4AnaRGF4BOUqMLQCep0QWgk9ToAtBJanQB6CQ1ugB0khpd
      ADpJjS4AnaRGF4BOUqMLQCep0QWgk9ToAtBJanQB6CQ1ugB0khpdADpJzf8PZYGJdTVcKeAA
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sub-category that ends with &apos;es&apos;' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='sum of profit atmost 0' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='wild card in filter: category starts with &apos;o&apos;' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
