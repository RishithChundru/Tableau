<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0711.1636                               -->
<workbook original-version='18.1' source-build='2024.2.1 (20242.24.0711.1636)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <Heatmap />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <SavingAnalyticObjects />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore (1))' inline='true' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore (1)' name='excel-direct.1r745sj0a1sh431agzvcl0jeo6o9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/College PPTs/5th SEM/INT233/Sample - Superstore (1).xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1r745sj0a1sh431agzvcl0jeo6o9' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1r745sj0a1sh431agzvcl0jeo6o9' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='costprice' datatype='real' name='[Calculation_2172142415841902593]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Sales])-SUM([Profit])' />
      </column>
      <column caption='Zero' datatype='integer' name='[Calculation_2172142415850168324]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_58B6670C0B8B4E58B097ABEDE5BF1495:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Attribute' name='[attr:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Avg' name='[avg:Sales:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sub-Category:nk]' palette='red_10_0' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#b9173a'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#c51d3b'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#cf263c'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#d9303f'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#e13a41'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#e84746'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#ed544b'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#f26250'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#f46d5a'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#f77a65'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#f9866f'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
            <map to='#fb927c'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#fc9d89'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#fda797'>
              <bucket>&quot;Art&quot;</bucket>
            </map>
            <map to='#feb2a4'>
              <bucket>&quot;Appliances&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Accessories&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[attr:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[avg:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[cum:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Country:nk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415844995074:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Quantity:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415845474307:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1tqw72i04zrnlz16sa1wj1fme3te].[__tableau_internal_object_id__].[cnt:Orders_58B6670C0B8B4E58B097ABEDE5BF1495:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Ship Mode:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;First Class&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Standard Class&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Second Class&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Same Day&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>0</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>4</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>8</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>6</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>9</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>10</bucket>
            </map>
            <map to='#e15759'>
              <bucket>3</bucket>
            </map>
            <map to='#edc948'>
              <bucket>5</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>7</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Row ID' />
        <field-sort-custom-order field='Order ID' />
        <field-sort-custom-order field='Order Date' />
        <field-sort-custom-order field='Ship Date' />
        <field-sort-custom-order field='Calculation_2172142415850168324' />
        <field-sort-custom-order field='Ship Mode' />
        <field-sort-custom-order field='Customer ID' />
        <field-sort-custom-order field='Customer Name' />
        <field-sort-custom-order field='Segment' />
        <field-sort-custom-order field='Country' />
        <field-sort-custom-order field='City' />
        <field-sort-custom-order field='State' />
        <field-sort-custom-order field='Postal Code' />
        <field-sort-custom-order field='Region' />
        <field-sort-custom-order field='Product ID' />
        <field-sort-custom-order field='Category' />
        <field-sort-custom-order field='Sub-Category' />
        <field-sort-custom-order field='Product Name' />
        <field-sort-custom-order field='Sales' />
        <field-sort-custom-order field='Calculation_2172142415841902593' />
        <field-sort-custom-order field='Quantity' />
        <field-sort-custom-order field='Discount' />
        <field-sort-custom-order field='Profit' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <analytic-model>
        <name>
          <field name='[AnalyticModel:{cfbc5e4c-e3bd-403e-85da-b35f65c86699}]' />
        </name>
        <analytic-model-specifications class='cluster-specifications'>
          <analysis-fields>
            <field name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
          </analysis-fields>
          <filter-fields />
          <lod-fields />
          <number-of-desired-clusters>4</number-of-desired-clusters>
          <is-dissagregate>false</is-dissagregate>
        </analytic-model-specifications>
        <result-fields />
      </analytic-model>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_58B6670C0B8B4E58B097ABEDE5BF1495'>
            <properties context=''>
              <relation connection='excel-direct.1r745sj0a1sh431agzvcl0jeo6o9' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Hyperlink1' name='[Action1_B1695A582F6F430AB6A8C6952AD51C77]'>
      <activation type='on-select' />
      <source dashboard='Map Chart Linked with Wikipedia' type='sheet' worksheet='Map Chart' />
      <link caption='' expression='https://en.wikipedia.org/wiki/&lt;[City]&gt;' />
    </action>
    <datasources>
      <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
    </datasources>
    <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Advanced Funnel'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column caption='-SUM([Sales])' datatype='real' name='[Calculation_2172142415844995074]' role='measure' type='quantitative' user:unnamed='Sheet 8'>
              <calculation class='tableau' formula='-SUM([Sales])' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2172142415844995074]' derivation='User' name='[usr:Calculation_2172142415844995074:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415844995074:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415844995074:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]</rows>
        <cols>([federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415844995074:qk] + [federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{8B7FD330-8682-40C2-BA80-B3FB31255E83}' />
    </worksheet>
    <worksheet name='Advanced Funnel_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column caption='-SUM([Profit])' datatype='real' name='[Calculation_2172142415845474307]' role='measure' type='quantitative' user:unnamed='Sheet 9'>
              <calculation class='tableau' formula='-SUM([Profit])' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2172142415845474307]' derivation='User' name='[usr:Calculation_2172142415845474307:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415845474307:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415845474307:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</rows>
        <cols>([federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415845474307:qk] + [federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk])</cols>
      </table>
      <simple-id uuid='{3FBF7492-7DF1-46CA-881D-451FE710D17B}' />
    </worksheet>
    <worksheet name='Annotate'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.666667'>
                  <node-reference>
                    <fields>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Accessories&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='180492.71602479115'>
                  <node-reference>
                    <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sub-Category: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Appliances&quot;</value>
                    <value>107532.16099999999</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='area' id='2' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run>Art</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.533333'>
                  <node-reference>
                    <fields>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Appliances&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='52603.492103481927'>
                  <node-reference>
                    <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.2'>
                  <node-reference>
                    <fields>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Binders&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='4343.4076048746647'>
                  <node-reference>
                    <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
          <annotation class='point' id='3' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sub-Category: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Binders&quot;</value>
                    <value>203412.73300000009</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sub-Category: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]>]]></run>
              <run>Æ&#10;</run>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>&quot;Bookcases&quot;</value>
                    <value>114879.99629999998</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{9A6BB30F-0C79-4416-9FCF-06A0AE1CB77F}' />
    </worksheet>
    <worksheet name='Band Reference'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='fill-color' id='refline0' value='#e2e6f0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' enable-instant-analytics='true' formula='median' id='refline0' label-type='automatic' paired-id='refline1' probability='95' scope='per-table' symmetric='false' value-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' z-order='1' />
            <reference-line axis-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' enable-instant-analytics='true' formula='total' id='refline1' label-type='automatic' paired-id='refline0' scope='per-table' symmetric='false' value-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{FE8431B1-A180-4842-A983-D4FC3A9C788B}' />
    </worksheet>
    <worksheet name='BoxPlot Reference'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refboxplot'>
            <format attr='boxplot-style' id='refline0' value='classic' />
            <format attr='fill-color' id='refline0' value='#e8eddad9' />
            <format attr='stroke-color' id='refline0' value='#f28e2b' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{72CB9FBE-2021-4B20-B668-3A5D803301D2}' />
    </worksheet>
    <worksheet name='Bubble Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DC193462-0F3F-4F48-827C-DA7200825BBC}' />
    </worksheet>
    <worksheet name='Butterfly Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column caption='Zero' datatype='integer' name='[Calculation_2172142415850168324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2172142415850168324]' derivation='Sum' name='[sum:Calculation_2172142415850168324:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='font-style' value='normal' />
            <format attr='font-weight' value='normal' />
            <format attr='text-orientation' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Calculation_2172142415850168324:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</rows>
        <cols>([federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk] + ([federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Calculation_2172142415850168324:qk] + [federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]))</cols>
      </table>
      <simple-id uuid='{CE9ED704-DE2D-4C5A-9D3C-9EE9B7F20608}' />
    </worksheet>
    <worksheet name='Butterfly Chart_2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column caption='Zero' datatype='integer' name='[Calculation_2172142415850168324]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2172142415850168324]' derivation='Sum' name='[sum:Calculation_2172142415850168324:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' field-type='quantitative' reverse='true' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Calculation_2172142415850168324:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Segment:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Segment:nk]</rows>
        <cols>([federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk] + ([federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Calculation_2172142415850168324:qk] + [federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]))</cols>
      </table>
      <simple-id uuid='{A2BCE496-3499-4351-BEBF-E3AD294B65B6}' />
    </worksheet>
    <worksheet name='Clustering'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column auto-hidden='true' caption='Clusters' datatype='integer' hidden='true' is-adhoc-cluster='true' name='[AdhocCluster:1]' parent-model='[AnalyticModel:{cfbc5e4c-e3bd-403e-85da-b35f65c86699}]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='-1' value='Cluster Outliers' />
                <alias key='0' value='Not Clustered' />
                <alias key='1' value='Cluster 1' />
                <alias key='2' value='Cluster 2' />
                <alias key='3' value='Cluster 3' />
                <alias key='4' value='Cluster 4' />
                <alias key='5' value='Cluster 5' />
                <alias key='6' value='Cluster 6' />
                <alias key='7' value='Cluster 7' />
                <alias key='8' value='Cluster 8' />
                <alias key='9' value='Cluster 9' />
                <alias key='10' value='Cluster 10' />
                <alias key='11' value='Cluster 11' />
                <alias key='12' value='Cluster 12' />
                <alias key='13' value='Cluster 13' />
                <alias key='14' value='Cluster 14' />
                <alias key='15' value='Cluster 15' />
                <alias key='16' value='Cluster 16' />
                <alias key='17' value='Cluster 17' />
                <alias key='18' value='Cluster 18' />
                <alias key='19' value='Cluster 19' />
                <alias key='20' value='Cluster 20' />
                <alias key='21' value='Cluster 21' />
                <alias key='22' value='Cluster 22' />
                <alias key='23' value='Cluster 23' />
                <alias key='24' value='Cluster 24' />
                <alias key='25' value='Cluster 25' />
                <alias key='26' value='Cluster 26' />
                <alias key='27' value='Cluster 27' />
                <alias key='28' value='Cluster 28' />
                <alias key='29' value='Cluster 29' />
                <alias key='30' value='Cluster 30' />
                <alias key='31' value='Cluster 31' />
                <alias key='32' value='Cluster 32' />
                <alias key='33' value='Cluster 33' />
                <alias key='34' value='Cluster 34' />
                <alias key='35' value='Cluster 35' />
                <alias key='36' value='Cluster 36' />
                <alias key='37' value='Cluster 37' />
                <alias key='38' value='Cluster 38' />
                <alias key='39' value='Cluster 39' />
                <alias key='40' value='Cluster 40' />
                <alias key='41' value='Cluster 41' />
                <alias key='42' value='Cluster 42' />
                <alias key='43' value='Cluster 43' />
                <alias key='44' value='Cluster 44' />
                <alias key='45' value='Cluster 45' />
                <alias key='46' value='Cluster 46' />
                <alias key='47' value='Cluster 47' />
                <alias key='48' value='Cluster 48' />
                <alias key='49' value='Cluster 49' />
                <alias key='50' value='Cluster 50' />
              </aliases>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[AdhocCluster:1]' derivation='None' is-adhoc-cluster='true' name='[none:AdhocCluster:1:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <style>
              <style-rule element='mark'>
                <encoding attr='color' field='[none:AdhocCluster:1:ok]' type='palette'>
                  <map to='#4e79a7'>
                    <bucket>1</bucket>
                  </map>
                  <map to='#59a14f'>
                    <bucket>0</bucket>
                  </map>
                  <map to='#76b7b2'>
                    <bucket>4</bucket>
                  </map>
                  <map to='#9c755f'>
                    <bucket>8</bucket>
                  </map>
                  <map to='#b07aa1'>
                    <bucket>6</bucket>
                  </map>
                  <map to='#bab0ac'>
                    <bucket>9</bucket>
                  </map>
                  <map to='#bab0ac'>
                    <bucket>10</bucket>
                  </map>
                  <map to='#e15759'>
                    <bucket>3</bucket>
                  </map>
                  <map to='#edc948'>
                    <bucket>5</bucket>
                  </map>
                  <map to='#f28e2b'>
                    <bucket>2</bucket>
                  </map>
                  <map to='#ff9da7'>
                    <bucket>7</bucket>
                  </map>
                </encoding>
              </style-rule>
            </style>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:AdhocCluster:1:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{B6DE83B0-1E28-4F98-B806-557C4B2982DC}' />
    </worksheet>
    <worksheet name='Control Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_58B6670C0B8B4E58B097ABEDE5BF1495]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_58B6670C0B8B4E58B097ABEDE5BF1495:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[__tableau_internal_object_id__].[cnt:Orders_58B6670C0B8B4E58B097ABEDE5BF1495:qk]' included-values='in-range'>
            <min>46</min>
            <max>462</max>
          </filter>
          <slices>
            <column>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[__tableau_internal_object_id__].[cnt:Orders_58B6670C0B8B4E58B097ABEDE5BF1495:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[__tableau_internal_object_id__].[cnt:Orders_58B6670C0B8B4E58B097ABEDE5BF1495:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk] + [federated.1tqw72i04zrnlz16sa1wj1fme3te].[__tableau_internal_object_id__].[cnt:Orders_58B6670C0B8B4E58B097ABEDE5BF1495:qk])</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{00ED3980-83B4-4C18-A9C7-0CFDF97B388F}' />
    </worksheet>
    <worksheet name='Density Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{31F71A70-0D50-449F-AE3E-87A155BB3D4D}' />
    </worksheet>
    <worksheet name='Distribution Reference'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Segment]' role='dimension' type='nominal' />
            <column-instance column='[Segment]' derivation='None' name='[none:Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline0' value='false' />
            <format attr='stroke-size' id='refline0' value='5' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-color' id='refline0' value='#000000' />
            <format attr='fill-color' id='refline0' value='#e6ecf0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='total' id='refline0' label-type='computation' percentage-bands='true' scope='per-table' symmetric='false' value-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' z-order='1'>
              <reference-line-value percentage='20' />
              <reference-line-value percentage='80' />
            </reference-line>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Segment:nk]</cols>
      </table>
      <simple-id uuid='{D648B07E-8DB6-4ED4-8D70-33E74E49534C}' />
    </worksheet>
    <worksheet name='Drop Lines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Discount:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' />
            </encodings>
            <dropline drop-when='always' haslabel='false' x-axis='true' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='shape' value='square' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Discount:qk]</cols>
      </table>
      <simple-id uuid='{B491F134-89FF-426B-A622-A7CBB4329275}' />
    </worksheet>
    <worksheet name='Drop Lines_1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[attr:Region:nk]' />
            </encodings>
            <dropline drop-when='always' haslabel='false' x-axis='false' y-axis='true' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</cols>
      </table>
      <simple-id uuid='{3F6AB3A9-220B-4A9B-AA6A-B03F1661056E}' />
    </worksheet>
    <worksheet name='Forecast Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' forecast-column-base='[sum:Sales:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Quarter-Trunc' name='[tqr:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[fVal:sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[tqr:Order Date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{BBF5E69E-B5B6-4219-BB2F-5C9262C00485}' />
    </worksheet>
    <worksheet name='Funnel Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Ship Mode]' role='dimension' type='nominal' />
            <column-instance column='[Ship Mode]' derivation='None' name='[none:Ship Mode:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' direction='DESC' using='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' />
              <size column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{5B83E408-E367-4485-BAF0-5EB0AA3CAE33}' />
    </worksheet>
    <worksheet name='Line Reference'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' enable-instant-analytics='true' formula='max' id='refline0' label-type='computation' scope='per-table' value-column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' z-order='1' />
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</cols>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='180'>
            <formatted-text>
              <run fontcolor='#787878'>Sales: </run>
              <run bold='true'><![CDATA[<[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]>
MAXIMUM]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='axis'>
                <x-coord cell-offset='0.8'>
                  <node-reference>
                    <fields>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
                    </fields>
                    <multibucket>
                      <bucket>&quot;Phones&quot;</bucket>
                    </multibucket>
                  </node-reference>
                </x-coord>
                <y-coord axis-value='325130.33569842193'>
                  <node-reference>
                    <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
                  </node-reference>
                </y-coord>
                <page-reference />
              </visual-coordinate>
            </point>
            <body x='130' y='-20' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{26FA4C29-BA83-4867-84AA-1E1C81FA5392}' />
    </worksheet>
    <worksheet name='Line chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Category:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[yr:Order Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{2039913C-5637-4702-849A-207DBF90D890}' />
    </worksheet>
    <worksheet name='Map Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:City:nk]' />
              <groupfilter function='member' level='[none:City:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Latitude (generated)]</column>
            <column>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Longitude (generated)]</column>
            <column>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]' />
              <lod column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Latitude (generated)]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3B6ADE62-5217-4D71-9E1C-E9BE5245ECB3}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' included-values='in-range-or-null'>
            <min>2.2250738585072014e-308</min>
          </filter>
          <slices>
            <column>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{91DCE570-10EC-48BF-A1D9-D0376E4C6375}' />
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
              <size column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F875287C-B9B1-4D6F-B230-31F02634E236}' />
    </worksheet>
    <worksheet name='Sheet 24'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</cols>
        <pages>
          <column>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</column>
        </pages>
      </table>
      <simple-id uuid='{BB42D5A9-3318-4418-8586-5151C8D98431}' />
    </worksheet>
    <worksheet name='Tree Map'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F1BBF96B-01E8-49DE-B3DE-EE60C9A94F07}' />
    </worksheet>
    <worksheet name='Trend Lines'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{6FEC977E-0A36-4635-BDA2-F981B4A6238A}' />
    </worksheet>
    <worksheet name='Word Cloud '>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Text' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]' />
              <size column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' />
              <text column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DC9EA1CF-A213-4FBC-ACF3-7B47C3BE71EC}' />
    </worksheet>
    <worksheet name='pareto chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore (1))' name='federated.1tqw72i04zrnlz16sa1wj1fme3te' />
          </datasources>
          <datasource-dependencies datasource='federated.1tqw72i04zrnlz16sa1wj1fme3te'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[cum:sum:Sales:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[cum:sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[cum:sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk] + [federated.1tqw72i04zrnlz16sa1wj1fme3te].[cum:sum:Sales:qk])</rows>
        <cols>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{1D2FE819-9D50-46D4-88B0-0251F549252D}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Map Chart Linked with Wikipedia'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98244' id='7' param='horz' type-v2='layout-flow' w='99034' x='483' y='878'>
            <zone h='98244' id='5' type-v2='layout-basic' w='99034' x='483' y='878'>
              <zone h='98244' id='3' name='Map Chart' w='49517' x='50000' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone forceUpdate='' h='98244' id='8' param='https://en.wikipedia.org/wiki/Scottsdale' type-v2='web' w='49517' x='483' y='878'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98244' id='9' param='vert' type-v2='layout-flow' w='99034' x='483' y='878'>
                <zone fixed-size='280' forceUpdate='' h='98244' id='8' is-fixed='true' param='https://en.wikipedia.org/wiki/Scottsdale' type-v2='web' w='49517' x='483' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98244' id='3' is-fixed='true' name='Map Chart' w='49517' x='50000' y='878'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{A4E32AE4-8F39-4995-B86E-0A83BED0E578}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Word Cloud '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Country:nk]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:State:nk]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{03BDAA1B-B4D1-4A88-A8E4-DDAEE4A7BC82}' />
    </window>
    <window class='worksheet' name='Bubble Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB5D643E-00A0-4CAE-BABC-3555E5A4C48B}' />
    </window>
    <window class='worksheet' name='Control Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D21A8C5-1A18-4CDF-A9E4-CC1D38B556A7}' />
    </window>
    <window class='worksheet' name='pareto chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD99B701-F3F1-46DC-BAAF-32204AD4CC80}' />
    </window>
    <window class='worksheet' name='Drop Lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4A88E091-FDC9-4F76-B6A7-F4BB26456026}' />
    </window>
    <window class='worksheet' name='Drop Lines_1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[attr:Region:nk]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75AD077A-AAA8-4D3C-99A9-6FF6FC160870}' />
    </window>
    <window class='worksheet' name='Funnel Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0245920C-792B-4946-BD56-3053AC4AAF98}' />
    </window>
    <window class='worksheet' name='Advanced Funnel'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Ship Mode:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{04E87AFE-0AEF-4A81-949E-30077D85C241}' />
    </window>
    <window class='worksheet' name='Advanced Funnel_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415845474307:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</field>
                  <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]</field>
                  <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[usr:Calculation_2172142415845474307:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South&quot;</value>
                <value>46749.430300000058</value>
                <value>-46749.430300000058</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12581A26-875A-493F-B248-4FF338A1EBC2}' />
    </window>
    <window class='worksheet' name='Line chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Category:nk]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB1C4880-ECC6-437E-AADE-9A8F4C11F411}' />
    </window>
    <window class='worksheet' name='Tree Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{01359B4F-8F19-429F-A863-EF4BF6C04EF1}' />
    </window>
    <window class='worksheet' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED797023-CA5E-4F3B-AAAC-EE200BDD4A0D}' />
    </window>
    <window class='worksheet' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E243DDB9-9C4D-4D2B-8B74-2F318F8FE84E}' />
    </window>
    <window class='worksheet' name='Butterfly Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Calculation_2172142415850168324:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB0C11E0-0B4C-4C8C-A729-41EB33D8E421}' />
    </window>
    <window class='worksheet' name='Butterfly Chart_2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Calculation_2172142415850168324:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C75E608E-4051-4C2B-B484-ACF8B7A99D96}' />
    </window>
    <window class='worksheet' name='Line Reference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D01447B-FFB5-435C-B1BD-31842C1181ED}' />
    </window>
    <window class='worksheet' name='Band Reference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1AFA9D32-FAB0-4748-BCFB-640580C82770}' />
    </window>
    <window class='worksheet' name='Distribution Reference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Segment:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{086F976D-6D72-406A-81BE-ED09D13874CE}' />
    </window>
    <window class='worksheet' name='BoxPlot Reference'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[sum:Sales:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{12BF9BC1-B72B-45C4-A86C-4F1FB9B4930D}' />
    </window>
    <window class='worksheet' name='Forecast Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA354710-2B27-447B-AA38-54834EBE72AC}' />
    </window>
    <window class='worksheet' name='Trend Lines'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BA1218C7-E96E-4276-98AA-E15FDAFC3DEA}' />
    </window>
    <window class='worksheet' name='Clustering'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:AdhocCluster:1:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:AdhocCluster:1:ok]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2E89CA0-3ABF-4D89-9C51-E54E56ACD05D}' />
    </window>
    <window class='worksheet' name='Annotate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AD97AF59-0565-4F15-9AB3-23E5A1E7CFD5}' />
    </window>
    <window class='worksheet' name='Sheet 24'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>&quot;Tables&quot;</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1C490348-1F7B-440E-8559-EDBE928DF36F}' />
    </window>
    <window class='worksheet' name='Density Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7F28F645-326D-4D17-96CA-EA0E77F5BDF2}' />
    </window>
    <window class='worksheet' name='Map Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2FE4B38-172A-4795-A681-D136AAF4450B}' />
    </window>
    <window class='dashboard' maximized='true' name='Map Chart Linked with Wikipedia'>
      <viewpoints>
        <viewpoint name='Map Chart'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Longitude (generated)]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Latitude (generated)]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:City:nk]</field>
                    <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[none:Country:nk]</field>
                    <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Latitude (generated)]</field>
                    <field>[federated.1tqw72i04zrnlz16sa1wj1fme3te].[Longitude (generated)]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Scottsdale&quot;</value>
                  <value>&quot;United States&quot;</value>
                  <value>33.5091</value>
                  <value>-111.8992</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{3D1F5FB8-3A98-4790-93EF-20FA09A2C30A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Advanced Funnel' width='192'>
      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
      r21GAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Advanced Funnel_2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Annotate' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Band Reference' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='BoxPlot Reference' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bubble Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Butterfly Chart' width='192'>
      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
      QwGp4PZsAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Butterfly Chart_2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKMklEQVR4nO3dzXMbdx3H8c9qVw8ra61HR342rtU2NUmBMikDDBw4caB/CjD8D3DjwJED
      F249wHCGHsuQhjbpQ5zGbhK7foj8JNvSrqzVw+7+OHTqTifBSqy1JOv7ec1kRqPxfvXbsd/W
      arOyNKWUApFQkUEvgGiQ+hqA4zj9fDiirvgMQKIxABKNAZBoDIBEM76+Ydv2pT+Y67rwfR+R
      SO/dBUEQypwwZ43qHNd1YZpmz3OG0VkA4+Pjl/5gmqbBNE0YhtH9i7vwPC+UOWHOGtU5mqbB
      sqye5wwjHgKRaAyARGMAJBoDINEYAIkWzmmUHuz//g9oPVy9wJYKgBbSKsKaNZpzzN/8GtaP
      3u59OUNo4AEgCADfH/Qq6Fyje8U8D4FINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZA
      ojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAonV9S+TGo1W0fB2vlOZRqdRwLZvGUfUY2XwR
      R/tPkStMAHoMymuj4dSgIgaUZiCViKDeCmAlE2g2m0in0/3YH6KX0jWATqDh+vVX8WhtDYVM
      HPc/3cO11+ax83gFB44PI2jgNLmI1vE2gk4bzVYbKWscm0d7qHsGipkkphZK/dgXopfWNYBk
      wsDq6iNYqQTKB1Xk8jlkMxlU7WOklYt2EEVl+zFSKROZ7Bg6HQ9RI4pIkMN4dAypeBTp1Gj+
      YVW6+roGMLuwdHZ7Znbh7HZy/hVMf33/Ap5jqselEV0+vggm0RgAicYASDQGQKIxABKNAZBo
      DIBEYwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAiTbwD8pO3rqF6NzcS2+n
      lIKmhfNJ8WHNGtU5yOZ6nzGkNKVU3z4G3HEcmKYJw+i9O8/zQpkT5qxRneM4DizL6nnOMOIh
      EInGAEg0BkCiMQASjQGQaAyARGMAJBoDINEYAInGAEg0BkCiMQASbeBXg14Fvm0jcJzuX+cH
      UHrvv1OGbU4QjwMjejEcA3gB9X+9h9rf/j7oZQyM+bvfAoXCoJdxKXgIRKIxABKNAZBoDIBE
      YwAkGgMg0RgAicYASDQGQKIxABKNAZBoDIBEYwAkGgMg0RgAicYASDQGQKIxABKtawB+p42T
      qt2PtRD1Xdf3BK+urWJichb28SGO6m1M5CzU6y5Ux4WnJ5FJ6jioNnCtkMFpvYGI6qATSWD7
      8edYeuN7aNoVWPkpZKxkP/aH6KV0PwSK6Mhl0ygfVKC7NjbKZVjZHNx2gIZ9jKd7B0j6dTze
      3kUqnUXLU7CPDpEtTCKfaKOpZxB0mn3YFaKX1/UZYH66iM3tMqaLEzhyWljMpTEWj8I+qaA4
      vwQrDhycuCjNZZAyY7DhY2w8i3RSx1EzhljnECoy2Y99IXppXQOwMgVYma9uj2e/uf/G9986
      +wC2VPqb+6fnvvPtAbk0iIbVhc8ChfUJjUSDxNOgJBoDINEYAInGAEg0BkCiMQASjQGQaAyA
      RGMAJBoDINEYAInGAEg0BkCiMQASjQGQaAyARGMAJJqmlFL9ejDHcWCaZijvJvM8L7R3pXWb
      5TsOgnq96xzf96Hres/rGbY5jWgU6RH9pHi+r/EF6JYF3bK6fp0WUpTDNifiOD3PGFY8BCLR
      GACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAovFiuCHh3vsY7sefAACUCqBp
      vf9uCmsOfvZT4AUuBryKGMCQaK+vo/7ee4NexnOZN5YHvYRLw0MgEo0BkGgMgERjACQaAyDR
      GACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0BkGjPvCVyc3MLCwvz
      2NraxNTkFDTdAAIfgVJQCohFdbQ7PuLxGHa3NlA9dWFlJ1Db38a4lYatopi7lkXSTEAhAhV4
      0I0Y9Ig2iP0jOtczAdSOD7DWdNHxmzhaqSFqxoHWKRy3hag5hpTewZONMn7+y3dgN9t4441l
      fPHwAU6cBnQfMOcWsLu3h07DwWSxgDt3H2BybhE/fPP6IPaP6FzPBJC0siiVlvDk8QN0Gi1o
      WhLjuQIS7Q5i8Sj8ZgOl69eRMICEDjx8+DkSqRymonFkYzHEJvLYtavQNA1eAEwUpzA3MzmI
      fSPq6pkASqUlAMBS6btdN15Yev2597+6tHR2e3J6/qJrI7p0fBFMojEAEo0BkGgMgERjACQa
      AyDRGACJxgBINAZAojEAEo0BkGgMgERjACQaAyDRGACJxgBINAZAojEAEo0flD0sIhHAGNJv
      hza6f9FDU0qpfj2Y4zgwTRNGCN9oz/NCmRPmrFGd4zgOLMvqec4w4iEQicYASDQGQKIxABKN
      AZBoZ6cI+nEySCl19i+sWWEYtjWN6pxhdBZAvV6/9AdzXRcAoIVwXlkpFcqcMGeN6pwPN3ex
      7nzZ85xhdBZAv87zjo2NIRLp/cgrCIJQ5oQ5a1TneBEDtur0PGcY9f01QFg/tGHNCXPWqM4Z
      Zf39v/egg//e/hA/+PEtlNcfwW4GyKWiqFRdzM8U8HR3H1Pzc+icAm7TxuLiAgDg+HAP+ycN
      zOTHsLW7j6mZeTzd2kKmUETLqcDXTWRSSeiqjUR+Glb8/+9Ws1bBFzsHSGdycKsH0M0M4mih
      6vqYyGcwntBRDxIo5s5/RlQdFw/WNjA1N4/DnfULzwGAnfUH8M1ZuMebPc1Zf7SKZmAgFVWo
      uj5mChZ29yuYn5vCKVJo2sdYXJg9d8bR/tNnthlVrephn58BIlFcy2egAEwU8jCiMbQ8hVIx
      gYflOm7cuIlaZQv3bt9Bfvqbb1RuYhI6fFRqX31N+eGHKJZuwmvVoccSiOkKteND7BzVz/3h
      BwBN+XBbHbRaVcQSRejKg6d0FBMxVOo1rDzZeaEftoPNTXhRA7Vauac5TecEnhZBs9nbegCg
      kM8jGoudbV+ut3DjZgmVrae4fecjTM/OdJ1Ru8A2V5VTrfU3gKDTxNbONnbK+/jo7j3EogaU
      18LadhWzGQMrK/eRSOWx/OZNbG9snG13uLeDnZ1tRDQNKyv3kZl9Ddtr9+EpA6d2FfZpC4mx
      NAopA9V669w11E+bSJpx+J4Ou7qN05YHr3WK7aqNsVgCpZkCyofVrvuSKebhNVrwOkZPc3wF
      dJoNnNTaPc0BPNy99xmihnG2fcZQWLm/hlQ+izdvLmNjY6vrlMQFtrmqTDPe/4vhRvWiqlH2
      zwdPsFJ1B72MS8FXSSQaAyDRGACJxgAuoPz4c7z/wR0cHDtnlwncvv3Bty71GNVLB646r2Gj
      /Nl/sP3Fl1BK8S2RF6FpgG3XYeg+3v3rX5CcWYbRruDPf/oj4pMlxBoHuPWLX+H1xdE9hXhV
      GUkLzXoT03Mx3P3Hu3wGuAjDHEPBAj769/vwx+ehB00AQHZiGj95+y0sL7+Gjz/5dMCrpOdp
      7D2BU/fQqJ7AKi7wNCh1x9OgRCPqfyKN9BgiZYgXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Clustering' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Control Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Density Chart' width='192'>
      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
      s403/rt7ex3SRNPr9RkejVm9d4vdB7+junSXatFmY/MZnjdm6IXMTJUxDUUYv7p7890Be27I
      4cYmK/c/oLvxO9LCPO6wz96zR/g6TxAr5moFRmHKzvYOYBAetdlou8+PngZhGL7Wv3DsU5mq
      4jgOzflFdBoxGnm0t3fo9/ocdA9YXLz2tb9/UuAHVKcqWEEPo7GCe9jFyBVQkU+/12djc4Nk
      7NHe22d+cQENRKe02e/usr7VJkyhUcgR+Uf8fn2f3t4zDCPBHQV0NrePn4vdbfKlKoF3xMbG
      Jp7nvfa69ru7tPcOGHke2zvt599PWVheRg0PcFMDb9SnXG1hffLJJ5+88av7xjS5Qom7t5bR
      2mJnu0OzWWNnr89svQpWjpwF2rSxSDDtAg4xRq7C7HSdQqEAHM8piqIIW4VMXbtJc6rE4eCA
      o9hhpqDZ2d1n+cYtHMumVMoThQGlap1GfYpCoUA5b9PuDpiplTFzRRxDoe08terX79XsXIG7
      d2/huT616RnyRszROKZSLr7RX+57Ltop0JqdplAqUigUyBUrHLS3KFbrVAoOuVKV6UYNxzYZ
      Dkc0ZmZxrC8v3uIwIPBjVu/dYuvpU1rX7xMOdqjUm8wvLGGkIaaO8ZPjN9RUvY5OYgr1Fnkj
      oDzVIAl8CpUpysXCK/0rTDXY33xMpG0qz/uXRCF2ocTsTINKdYpSMc+gf3jq759UrjVoP32E
      KjQIeztMzbTY39mgOj1HrVqhVi0TpDDXmqNSLHI06GMXKlS/8lz64xHadJh+/ro1mnNEY5+l
      +SYDN6DZnGW21WT76WNai9d59uQBs9dWqJZyWLkStpG+8roWyxVac7McDQ8plKrkbdB2npJj
      YFfqhCOXxmyTYr7A/wPywcHg8QI7vQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Distribution Reference' width='192'>
      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
      /wtZ9kU0qJkPFAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Drop Lines' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Drop Lines_1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forecast Line' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Funnel Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Line Reference' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAdBklEQVR4nO2d228k153fP3Xpe1ffm807OeRoLpJtSba1kmVvnLW9iA3YRoIsEOTFCPwQ
      5B/Iu98C5CFBkOcAQR78ZAQIsGsja8f22rKs1WrXI2lGmhkOh/dLs+/3up88cIYzHI6kLg5J
      kdPn80B2dZ9fn19X97fqnPqeOkcRQggkkhFF/bwTkEg+T6QAJCONFIDkM3nrN7/ixs3bB9v/
      9PfvYD94LITg79/6O27eXj54fWlp/YwzPD76552A5PxjWSZxAT//m1+QBsrCovfbn6Mk55ks
      qtS7Oq9/Y4F3fvML3l2qkNY0mjsl3vrTB7x47QuYvo7qNnFcnWgyQWPjPsVChtTUCzh+mD9/
      7cXP7bPJM4DkMykUC9z++COE22d9ew89pOP7kM4XmZ+5jGeVuXV7mfXdGmMZg2zGQAh48ZU3
      mC0mQdNwHQdQEL4gW5rmL7//L7nxh9/y6ivXP9fPpsirQJLPQvg+KMr+YyFQFGX/v6qiPHhO
      AMqDvwdxQuD029y4eYtkfpoXF2cO3sfpt3jvoxXefO3Vs/9Aj6GIffivb986sTd9c6bIG7Ol
      E3s/ieS0OOgDyNOAZBS5UJ1gz/O4aC02VVVRVdnVOq9cKAEAF04AkvONPDRJRhopAMlIc+Ga
      QA9ptVrUajVKpRKJRAKA3d1dxsfHn1peCMHNmzfp9Xpcu3aNO3fukM/nsSwLy7K4fv06sViM
      9fV1TNMkk8mwurrK+Pg4pmnS7XZ55ZVXZHv+OWPob1MIj8q9jyivrOBbXdY+/JDu7gbbtz5g
      UN+h1x3Q2Nk9zVwPUavVSCaTxGIx1tbWWFlZYTAY0Gw2WVpaolKpcOfOHRqNBp1OB4Biscjm
      5iaWZfHSSy/xD//wD7z33nukUimi0ejBe6+srJDNZhFCsLy8zK1bt/A8j42NjTP7fJKzYegz
      gKJohGMRuh2b2uY2kXgE07QpLU5RubdOrbHKta+/QX1jlV5SxZ8unkiCQoiDju/jjy9dukS9
      Xmd1dRXXden3+6TTacrlMqFQCMdx0HWdfr/P5OQksC+ATCZDpVLh17/+NT/84Q8Jh8PcuHGD
      W7du8dJLL5HNZvd3jK5z9epVfvnLX6LrOoqi4Pt+4E647/v4vn8i+0Jy8gwtAOHZ2KaH71go
      4RCtzS2yE1OU760ST6eYKMxQ396hODNPIpvn/v37pNNp2u02kUiE6enpg/fyfZ9+v08ymQyU
      rOd5Bz+mSqVCp9OhWCyyt7dHNpsllUoRDofZ3d0lGo1imibRaJRut0sikeCDDz4gkUgc5LOz
      s8NgMMC2bZLJJDdv3sT3fVRVZXl5mUajwWuvvcZgMKDb7TI3N4eiKJ+R5WHkZdDzzYET/F8+
      wwkWQiB8D0XRUFTl0VHZ91EOvmCBoqh8faZI3mojhDj4Ed67d4/JyUlc12V8fJxOp0O1WsW2
      bdLpNPF4HE3TsG2bVqtFKBRienqaqampgxweF8BJ4/s+iqIE/oF/FpqmSQGcYwI0gRQUTT+0
      DaBo2uOlDr1u2zaxWIxut0sqlcK2bVRVxXVdhBBMT0/T7/eJRCK0222azSZTU1PMz88TCoWw
      7f1Bt57n0ev10HWdUCj0jB/56cgf6WhyaleBFhcXD217noeqqgcDqYBHg6oe/BdCHPohep5H
      u91GVVUMwzjUnn777bfRdZ2JiQnee+89vvvd7/LTn/6UH/3oR/z+978/aPdblsWHH37I9773
      Pd5//33y+TzNZpMvfOELbG1t8cc//pEf//jH/OxnP+M73/kOxeLJ9F0kF4NTEUCv12NpaYm7
      GzVWdppDxYxlE7z6wv4lTN/3D84AD0UDkM1mD/oNjUYD27YP2vC3bt3CMAxWVlZIpVK89dZb
      /OAHP+DmzZs4jsPHH39MpVIBoFwus7CwQK1WYzAYcOvWLarVKr1e76ATfFKUy2X6/f6Jvqfk
      5DgVASQSCa7MlvjD8g1+9dHaUDGvX0/yV4uL9Ho9VFXldx9u8+7t8qEy//xlnS8txgBwPEEo
      EqPd7aOoGktLS0xNTXHr1i1CodChJpdhGOzs7FAqldA0DUVR6PV6GIbB7Ows7777LouLi2ia
      hq6f7C6ZnJyUzatzzLkwwiIhlVI6xGAwIJlMoqoqW9UOf1o67Ctcm83xolcA4AtfeplIOLL/
      I1cgFtEplUpsbW2h6zqGYdDr9Xj55ZexbRshBIZh4DgO165do1qt8uqrrzI7O4tlWRiGccgL
      kIwG50IAiYhOtesGuiyazxcOHod0jWQsDHDocutDh/hpPGzrj42NBU1X8hwxvA8gPKrLdxBa
      nHDIp9cxSeUMOrUG2YkifiiD3WmRnXj6UIRPo9618Tw5ylNy9gR3grs2+Ykp+r0NzIFNaWGS
      yr0N6s01rr75+r4TnFBwJ/P7t9INiRAC13UPtv1Ajqs4t8OkpRN8vgnkBDuWwLdNNt5/j+TE
      JRRvwN79dWLpJKX8NI3tHQoz8yRyhf3hAwE6f4qiHOqAqk8xpGqtAfefclUpZ0QxJs9n+106
      weeb4fsAaojszBw5TUN4HgLQdA3f81E1FVDglI/Cf/veCn/73sqR57/xxRn+47/9+qnWLXk+
      CeQEaw9d2MeOaJquPl7oxBKTSM4CeW6WjDRSAJKRRgpAMtJIAUhGGikAyUgTyAmu3V9CT+bQ
      sbFcFSMVpVGuk58q4msGdrdBMpc/zXwlkhMlwFgglUgyQbfTQldVFHwalR65UpLa2hrdvs/k
      9Rdp7W4zSIXwvEIgd1Yg8Dzv0XaQWMGhWIlkWIYXgPAIJbJ4lWXUSHR/JmAFHMtG1XWiyQiO
      aZLIFYgkkg/G8Q+fiIJy2DENFizdVsmxGF4AikK/ukNm+hK6YmO7KolklGalTn52Hl+N4Q46
      6OEw6oNZFB6/RXK4Kh67pTJI3BOxEsmwBBoMl5t/4WD74cib/HQc2O9N60bqJHOTSE4d2W6Q
      jDRSAJKRRgpAMtJIAUhGGikAyUgTwAn2aazdQ41nUb0+tquSyiRp7NXJTxbwdQOn0ySRy51m
      vhLJiRJoVojU+BSV9U1wBji+gnBMcsUE9bV1ugOfiavXaO/tMkiHpRMsuRAEEIBPdXWVsReu
      Ur77ESEBnu/j2g6KrhKJx3Btm1g6Qzge33eCAyQinWDJ58HwAvA9FEWhtVclXSzuN4GySZqV
      BrnZeYQaxx10CEWiaHpo35kN6M5KJ1hy1gzvBGsRSldfPNh+OOVUfvrR5FPSCZZcNGS7QTLS
      SAFIRhopAMlIIwUgGWmkACQjTUAneBk1niESEvS6NqlsgsZeg/xEAV9P4nSbJLLSCZZcHAI5
      wUZpkurGBq12lVh+itZelWwhQX1tja4pmLhylU6ljJmJSCdYciEI5ATX1lYZu3yN8l0H3bUw
      FQXPcVE0lXA0hGvbRJIGoWhUOsGSC0FwJ7hSIT89Sb/nUHrMCfa1OO6gTThmoIXC0gmWXAiO
      7QRHHpi++Zn9ZY00IGSkTzQ5ieS0ke0GyUgjBSAZaaQAJCONFIBkpJECkIw0QwtACJ/62hKt
      ShUhPOqb6zjdJnv37+OabWzHp9donGauEsmJE8wJHpukurGJMJv0ujaebZHJx6mvrdEzoXT5
      Bbq1ClY2Kp1gyYUggAAEtbVViotX2bt9g36jiV6axnc9FFVFD+t4jks4FkcL7xthQZ3gQ2ZW
      QCdYGmGS4xDACXZRgHa1yuQXv4rZ7aDrCs29+iMnuN8mEk+jhyP7QxMC/igfH84Q1AmWQyEk
      xyGYE3ztpYPtaNIAoDD7mBOckk6w5GIhD5uSkUYKQDLSSAFIRhopAMlIIwUgGWkC3RPc3LiP
      Gs+i+Sam5ZPOpWjs1clN5PG1JG6vRTyTPc18h+J//uIGv/3T6lBl3/ziDP/+B1853YQk55ZA
      TnCyMEF1c4PC3Dyd+/doOAPSuf3ZofsWjC1eplevYeVi+H5x36IdEoHA9/1H28OHIgSHYnum
      TaNrDhXbG9iHYiWjRYAmkKC2vkpx4QXa22tkZhZQhED4PoqqoOo6vuuih8NoeiBdPUD51M0g
      oRLJsARyggHalT0AOnu7ZCcnaVUa5Gbn8LUEbr9FJJlBj0QDO8FPurnP4gQHGRahKIp0kUeY
      QE7w+IETPHHwfGF23xHed4IzJ5mbRHLqyEOfZKSRApCMNFIAkpHmOJdrnmturuyxXe0MVXaq
      mOKl+eIpZyQ5TaQAnuD//eMKv/6nlaHK/uVXF6QALjjDC0AIrG4LJRRDVTw8TyEc0Rn0BsQS
      MYSi47sOejh8iumeb37+zhK316tDlX3l8jjf+vKlU85I8lkMPxQCH6vXp9vYQlUFvg+hsI6m
      +ph1DU/bnxQ3Uxzd6dE/Wq3w+w/WhyqbiIalAM4BAZpAKk6/TXpyhn6jSlgIHCBXSlFd2aLR
      arLw1a9Q31ill1BwJ/OIAEMMhBC4rnuw7Qe6Kf5wrPCHj/WfjBXHzznYjfz+oVjJ58MRAagK
      RHWNvvPELAu+Sb/VQ4n1CWkC21UxUlHK6xXyM1OkFjL061VyM/MkcgV0XUcJ4LAqioL+2BAK
      NaCb+3isog4fqz4Zqxw/52AOtHooVvL5cOQbGE/G2Hj7NyS//HUGj4lA0WLMvHp01GQ8/8gV
      jsXGTylNieR0OHK4U4CU4uF88A4ZVY6SlDzfHDkDOJ5PYWYegL3NFZhcPOucJJIz44gA9voW
      pKf2N+QsJ2fGX799l3tb9aHKfvnKBP/s5blTzmg0eGovzO3sUtlq0G61ufr662ed00jy4coe
      79zaHKpsKhGRAjghnnrJQw1FadcajE1PPO1lieS54akC8O0Btm3j2tah5z3bxPfBNXtY/T7C
      dxl0OgjPwfcFrm2fSdISyUnx1CaQGk0R1T3M3iMBCCGo3PoDiSvforNyF08oxOJRFMVjoOp4
      moEeiZAdy59Z8hLJs3JEAEIINm68C6p6yKlUFIX0xBQuoCgC4YKnhiiM56nef+gEf1U6wUPH
      +seO9X0hXeQT4ogAFEVh8uoVPn73Jkbs8S/IpdO0UewtjLFxHEchmU3SqjXILyyS1WK4g650
      goeOVY8dq6qKdJFPiKfuRS2coHTpEqb5qAmkKDpj1750pGxu2jh4HA7L66aSi8VTm0CNSgNh
      tfFsOd+I5Pnmqef77s59bBIkU4mzzkciOVOe2geYe/3bgAg0O5tEchH5lJ6UEnSFI8nnxH//
      3+/y4XJ5qLLfe+MF/tWfXzvljC4O8lLCc0CzM6Dc6A1Vttu3PrvQCBFgnWBBr7KF44LVrlPb
      3MIddKisreFZXRzXZ9BqnWauEsmJE+gMYNXW8eOTNJY+JlaYobG9g5GLUV9bZeBo5GfnMTst
      HDO5P+NyoNmhD8/wHKT7cSQ2oIl23FieqDcQT9QbaF89mXOQanmGnJ9Dhj4DKIpCLJMFBHrU
      QLX7OA+efzg9uRAC3/MCOcCPEJ+6GST0InCiKT/n++o0CbBAxkMneJvsRIl+36WYTdKsNMjP
      zZHVkji9JvFMjnA8cYzZoZUnZnge/kMoysnNDh10we3jzix9ZFbqZ8o5SL1yTeXHGX526Cec
      4NiD2U+KiX33VwNC52B1GIkkCPJQIBlppAAkI430AUac//azd/h4bbjpHL//5hW+/7Urp5zR
      2SIFMOLUWgN2at2hynb7z98df7IJJBlpAjnB/eo2jvtgzeDdHdxBh+r6+iMnuC2dYMnFIlAT
      aFBZxYtN4DdXaTX7OL02RjZOfX0N09HJzcxgdTu4lnFhneCgQ2AvuhMcKPbJnJ8DAjnB8WwO
      gaBTrWLWdnE9UFQV4Qs81wHAtS28Y92vej6c4GBv9WTpYII/MYL9ik8zkwtHQCfYQrG3mX75
      zxi0m+iaQmOvTm5uloxm4PQaJHIFIonkiDjBT64x/AzrE5+ZE/xE7LPk/BwQ0Al++WA79mBN
      4LFLj+4DDmdGd3EMycXk+ZKzRBIQKQDJSCMFIBlppAAkI40UgGSkCSQA37XxBXiOhW2aCN/D
      HgwQvocvxDGv/0sknx8BfABB+YPfkbz6bUSnQrNcIW7EEK6NHong6WlUXSNXkiunSy4OAXwA
      hczkNC6gqpAolPCdAbmZPJXlTRqtBpdf/zM5O/TQsSc3O3Sg2GfI2fefv7WNAznBrXIDMdiC
      XhktniVuRCmvlsnNTJJeyNKtlOXs0EPHntzs0IFinyFnVX3+1jYO5ASPv/y1B1vTB88ni1MH
      j2NxuaTSKPHh/TLt3nATbX1psYQRj5xyRsF5vuQsOVN++qubfLRaGarsf/4P3+Hq7PkTgLwM
      KhlppAAkI41sAknOHNfz+R9/86ehy//rb16nkI6fSi5SAJIzx/N9fv7O0tDlv/PVhVMTQEAn
      2NmfB9R1cB0H4Xs4Dxzh/XlBn69rxJLnn4BO8N+RvPpteusf4/oKsVgIz7EIxWJ4WgpV08iN
      SydYcnE4hhMs0GMGYeHjKFCYLVBZ3qDRqksneMSc4CCxnvco1nO9oeMAfM87NQc6oBNcRwy2
      iaoulqdiGFHKK7vkpidJLWTo7u1KJ3jo2IvvBAeJ1bRHsV7A+/BVTTs1BzqgE/zmkecTY4+c
      4Hh88mSykkjOCOkDSEYaeRlUcqGwHJf/9X8/GLr8X33zOlkj9omvSwFILhSO6/PXb98duvy/
      eG3xUwUgm0CSkUYKQDLSHEsAB06w8HEsG/HYCpESyUUieB9ACHY//gDHV0gaCVx7QDge378n
      WFXIjY+dQpoSyelwvE6wAooPnqpTmJ+mcm+DerPOlTekEzx8rHSCh673MSfYC9jK8PxHsQIY
      mM6h148lgFA0CppKLB6hfH+H7PQEqYUsbekEB4iVTvDQ9T7mBGtasPUJNPVRbKMz4N/9p/9z
      6PXgAlAUipdfOtg0xh7dHyydYMlFQ14Fkow0UgCSkUYKQDLSSAFIRhopAMlIcywBCN87cIIf
      /t9fQlM6wZKLxbGc4L27N9ESORS3j2P2iSQT+FoGFMhPSCdYcnE4hhEmMLs9tIGLnslQvDTz
      wAmuceVrr0sneOhY6QQPXe8JOcGed/S7PZYRZhQKWKZP4qETPDVB6lKWdlk6wcPHSid46HpP
      yAnWNOfI68c4Ayjk5q8cbBmlx5zghHSCJRcLeRVIMtJIAUhGGikAyUgjBSAZaaQAJCONFIBk
      pDnWHWGe2Wbj9gr5UoZ2vUGmVESEM9jdDrnJ8ZPOUSI5NQILQAhBdX2TcDyEabqML85QWVqj
      1lzn2jfekE7w0LHSCR663nPlBAPhWITq5iaZsXF2l1ZI5jJMlnLUN7cpSid4yFjpBA9d73ly
      ghVFITuzSHZmMWioRHLukJ1gyUgjBSAZaaQAJCONFIBkpJECkIw0UgCSkeZYt0Q2N1fotvqk
      cgadepPseAE/nMHuSCdYcrE41h1hyXyBfn8Xy3IZX5yWTvBj28PHSid46HrPlRMsBBs3/pFE
      aQ4Nd98JzmaYLGWlEyyd4E/kuXGCURQufe0vAodJJOcR2QmWjDRSAJKRRgpAMtI8kwDMZoWd
      u3dweg0sy6NTrZxUXhLJmfBMK8V3Gi2KUxlqa+u0OjZzr7x6UnlJJGfCM50BhOtidXtokTCp
      sTHMbvek8pJIzoRnOgMULs3TqjTJzU4i1Aiu1T+htCSSs+FAAG/OHHNa80uzhzZv376N1ovg
      eQVeXigS0Yc7yUwVDTzPQwiBoii8crlEIhoaKnZmLHUo9itXxskkIkPFzo9nDsW+dm2CYjo2
      VOzCZPZQ7BsvTjGZTw4Ve3k6dyj26y9NMzeWGir26mz+UOw3vjjD4mR2qNjrc4VDsd98ZZZr
      s/mhYl+cO1zvt16d44uXikPFZpORR7EI/s1fvDhUHEA6Hj5wgDWVQLFGLHQQG9bVI7GKCOJn
      D4nv+6gBXGAZOxqxQgiEEOcq9lQug6qqiu9aLN25S6dvYppWoFjYT3p7Y412t4dtu4fKdHu9
      T4hVaFbLbJdrgcapPKpXsLG6zJ07S5jOfp2OZeL5IDyHgWV/Ymxtb4fl1XVcx6L/RDnTND+1
      XnvQpd0zce0B9VbniRIeprn/fr1u70is2WvTs1yCoqoqwnNYub+C+5SxU5+0jx/GDrot7txd
      YmAfrds0jw45gP2hE/s5d+g9pYzwfQaDPt3e0aa0oiioCqyvLLNVrn5ibr3e0X7ow3oBuq06
      95ZXDz7zM/UBPg3XbKEni2yuLdPr9iiMTxNVXbo2pGMatUabqZlptje3GSsV2d2rsbi4SPhB
      k2lv4z5aqoTidXj/xhKzC3OY7RqhZJaIBr1WDU8J0W62mF24TDyig/C4v7bD1esv8Mc//I6F
      Ky/Ra1ZJZMfwzRZaJEGzXmdiepa97Q3CiTSaN0CEEkxPjAEKM5Nj3NnpYnebrFaapKNQbrvM
      j2epDQSK1cbIFmhW9yhOzZFJ7jeXugOLtO6xXWlgxMKsreyRyY3hDZps1zosThdp9jwyRhjT
      9ul3WhQnZ8kYcRqtJtXGgHRcp9m36NY09EQWYXXQYmHW7u4wtTBLLKSRSCYO7eft3R08EaGY
      jVHvOMTDPq4SRVhttFgGs10lXZygvrtNcWqejPGoeXf37l3mFi7TbzXY3CkzNzPO6maF0vgE
      im/TqOyixdJgdVBDUeqtNpdfuEpYg3KtyeL8NLeX7xPXfaKpAthdTF9HE1HiCYHZaxMx8ozl
      M4dy3tzeRtEiGPEQ9WaXqfE8G7s1xkslGo066UyWZmUXIskH38sDhIfpqrwwlqVWa4Lw8F0T
      R+i0m1VSuRIRHWp7u0SMPKXC0WbhXrnG9HSReytrqI55mkaYYGN1hWx+jEJpCsWz6fRswo5F
      w3KYH0/x/q1lPHy6nQ7gYzuPRvqZtouRjBMKhZmZu8Sg1aBvmmxtbVGr12h0BhRz+21my354
      NNG4dmWOjz5aIl+aIB2FSGqMTqNGp2+RDCt4jsXdpSWSuQnMTpnVjTK9pxzter0uncYeXVtw
      eXGW3d0K/WaFSrNHt9tBKArWY2e2frtBrT1A2D0azQap4jTWoIbthhnLZ1hdXcMcdNmrNZko
      FQAFy3oYr6CrYHoQ0Vy6fZutrQ0Gtk+pkGV8ahbPGlCv1Z/YxR7l7T32KntUGh0uzU3R7TtM
      leKsrlX3P5cAyxogULCsw2cioWhEwmH2qjWuX5lk9c49ctOXadb2qNW3WVvdodvr0enbZJMx
      VEVgPjziuxb3VzeIhRx8PUe3Vadrerj2gN3Vu5gihO2rFHPpw3X6HpW9PXbKewwsh/kJg7W1
      PSYvLVCtlEH41Op1uoMBW1vbR76Xanmb3b0qtUaTeq1OrdVlLGtgZAs4Zpd6vYYQYNtPP1t7
      jsn99TKFVBTHc9B+8pOf/OSpJZ8ZhUy+RDFrgKIQjUbQcBmgU8ykiUajGOkU/W6PdCaDORiQ
      zeUJafuaTKUMVpbuoUXiJGJxwmENczAgkUqTTadIGQaRkEaj1SGdzREJaYBgY2OTuJEmb0Tp
      exqDdoVkdoxMyiCsa7R7AwpjJep7m/RslYlCinAsSdp4rPOqaKi+iyNUCrks29u7zMzNkDBS
      CGeAkcrgWAMSRoZ4NAzsN5VMx2esNEYkEiUajREJhXHMFjY6xVwKXwlTKOSJR8I0mk0SRpp4
      dL+znkrGUUJxErEItmWRMDLEdMHAhUQ8QTQaIhqN4nkejmOjhyL4dg9jbJZSziAc1ilXmySj
      Gq0+JKIQTRj4jkUkFn/wnik8x8G2LSKRCPGwyvLKOsVikdW1XWYn0txd22V2doZYOEokrBBL
      pMhmUoR0lVarQzZfIKQpCN+l1x+Qzk/i9CvEUwXCioOvRpmZv4TiDVA8G8tT8T0H23aIRML4
      romRm2IyZ1Bp1Gn3BaW0zupOldmZOSLhELFoDMcyiSX367Vtm0hkfz/FjTRjhTztRgVPC1Mq
      FohGoyiqSiQcJhqN4No2WiQGwjsUC6BqOtOzM4RUQavd4/8DYMlh97gS6ygAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Line chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Map Chart' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Map Chart Linked with Wikipedia' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACO0lEQVR4nO3WsQ3CQBBFwQNhiwJAov/OSKCMI3JAA77gzUQb/uRJe5lzzgFR19UDYCUB
      kHY7jjnn+H7eY9v2lXvgVH8B7Pt9PJ6vlXvgVF4g0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI
      EwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJ
      gDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBI+wGCIQ6NT52fpQAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
      tC8A7VQlM5wTQqMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 24' width='192'>
      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
      AqO6ektXnVMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Tree Map' width='192'>
      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
      N+tRXkn/C2yb9xu/H1UNAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trend Lines' width='192'>
      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
      pwEhgC1KlSr/5a9/xp//+5e7/gbMFcqYDN3vAB7yO1mMpLYEUChXe9rNBDD1sWsbTTV3gT7M
      5LiVpbU4zxwaIxwOk0qlUKlUWCwW1tbWMBgMTE9PMzExwczMDAaDAUmS8Pt3GwBboSgK33/3
      Lr//5e6TrcbtJuKZwtbvkMo27wvWDdNeO99+88HmmhDAfS5eW0Wv1RCOyV0LIBzPNq3m3Iqg
      1861hQ3On24sSnUtvDntsJl1yD0LILdDAIqiUCqVkGWZZDKJy+Xi+vXrrCcy/PzaGi8/19go
      mp2dxWw2o9PpmJubI1+sYO6iCkM7FiNpnBZDx4JW25l0N5JjNn+HUqW2I+eiFxo1Vh98fkIA
      9/nx+wt86ZeOE4rJPN+lC7zh4+9eALM+B997u5FnvZ7M4nX27ra1GLqPAlWrVUqlEgtLKzx3
      LMDFixcpFos4nU7MZjPFYhGHw4HFYuGll15CpVLzYfSnuFwuXC7X1nnuhRJ8842bhGIZ/vS3
      P9X3ty/A9y7e5ldfPNLTMcH7NUw3Q8idigd0Ynv9VSEAYGUjjd1i4OSMu6dY+Fpc5vh094sx
      m1lP6n415tWoTKDHCBCA2aijUHpgAdgMKyqKQiKRIBqNks1mOXToELdv30av17MUWudLF57D
      YQlgMBhQteiosnm+zfl2PJ3nmz+7SSJT4Dc+fZJCucrX//EX/NFvnuuqHMnDZHIlNpL5jq1L
      H2bSbeWjuxGgsebqYYnWlIDbuvU7CgEAP7o0zytnDzEx3pstOBSTufBcs9p5rTEZtBTLVUKx
      DDO+7svObPqsUqkUyWiYK1euYLPZmJ+fR61WMzk5idFoZHJycius6PM17NnfuZLDO2bvarHu
      tBoJx2TeuRHiF3cifOH8Uc4em9i64N+5tsqbV5a3FpG98MP7n3Ov+MesWxWeM/kS1j4XwJtM
      ex1EU43AQN8CKBaLjfJ6ahWVah3tI3YRDopKtcbt1QT/+leeRaWSqPTQnTGxbWHWLQG3leX1
      NOGYzPlTu60JtVqNUqlENptFq9WytLREJpOhVqtx8uRJwuEwkkrF1NQUNpuN6enOF6Ki0HWk
      aspr47/97Vt8/qVj/Olvf2pXxerfeuU0f/ZXr3N61oujh4ysaq3OezdD/OffudD1MZvoNOqt
      xP10toijh1TIZjSSY9L9CyAdj/Dh7VVmJsbRKBXM7ikcQyqAi9dXef6ofyv0qdeqKZarHb02
      iqJQrfXm44HN5Jg0kVgGo0Yhm82ytLSELMvodDpsNhuxWAyLxUIgEODo0aPo9fqtsKLX68Vx
      KYnNZutqGtJrKcUvnD/GF84faxmdMug0vPrKaf7Xdz/gj77S/VTo4vVVnj82gVbT5+L1/g54
      Qi70JLxmTHlsfPftO5w93qcb9MbN21RLVbI5I/lCheen9UNrh/7he/P8/pdf2LLWep1mwrEM
      Ux3m59lCoy5lJ2tyvV4nn88Ti8VIp9MYJRP/8P03WE/muXnDyvHjx3E4HASDQYxGI5IkMTMz
      s+McD1eFNuk1yLliVyHYRKaA06rv2kKtVTcu6HavPxZ08fY1A298uMj5060Ndtv5wTt3+YPf
      +Hjflagn3VYW15IkMgXsps6fezu0aonljUbF6L4E8OL5X2ItEkGjUWMzDK8dOhTNYDHpGHc8
      iMYEPHbWkzkOTbjaHAnryRST440qy4qiUC6XkWWZdDqN1Wrl5s2b1Go1fD7f1sJzenoao9nC
      N95e4dS0iRdffBEAh6O3EpRWs558uYatSYf0h4nLRTwOy8ArQL/6y0/zZ3/5Os8c8XdMTbwX
      SuBxWRiz928bnnTbiCTzyPkSAbdtz7/PRjLXmML3ewK/70H+6+58/uHgxx8s8PLzOxdlfpel
      afUAeDA/VxSFj67eILW2zuuvZzhy5AiLi4tYLBbsdjsul4tz586hbeFzzxcrBA7352WBzelA
      GV97jQKNTLB2fbT6xaDT8Oovn+br//gBf9hhKvSdn9/m8+eO7un9pjx23rq6glJXePqQd0/n
      AtCoVdRq9Sc3CrSeyOJ2mFvO0au1OtcWorz6ytM7Hp8Yt/Lm5UXK5TIbGxskk0mq1SoOh4Ol
      pSUMBgOBQIB0ScW5j53hhZPTqNXqpv7zVkz77F0nwjejl35hsVSOiS6KbvXDU7MeLl5f5a0r
      K3zi6ammr0nJRZJykcOBLtTahsn7ifsmvRZ7F3VUO+F1mokks0+mAGq1Ov/pf7/G6UMe/t0X
      nm+68HrneoinD7lJp1OkUimsVit3795FlrN88P410heOUCgU8Pl8WCwWjEYjs7MPQp6Zt1Y4
      PNXe89KKC8/NEPT0n3poM+vJdFkkN54p8MyRzg06+uVfvfw0f/ZXrxH02LBbDKhVEhp1I4NL
      rVbxT5fu9RX6fBizQUeuWKFcqfVUEKsVM34nS5H0kymAG8sxPnZiklm/gz//mzf5vS8+h1It
      o9FouHv3Lvl8nv/z45v8zhfPsbCwgNPpxGg0cubMGXQ6Ha8tqnC73bjdrTe5knKhZZWFTnz8
      ZPssqE6YjTrS2e52g7t1q/aLQa/hdz9/hm+9dYtiuUqtplCp1ajVFGr1OhISX/7UiYG8l16r
      Jlso922D2M6Ux8aNpdiTI4BqtUq9XkeWZf7p9XfwWNU8NTnBws0Ef/Bf/4rf/tzHOHf2aY4e
      PYpcUphdVvHxM6ebnst4v2tKK99LI5WxeZGpR4HdrG9bOHY7uUKlqy4qe2Fu0tXS3FavKz2H
      ilsxMW7lyr31gZwr4LHxg/fuDZcANrfps9ksqVSKbDaLw+Hg1q1bqFQqfD4fJpOJO5E8//bX
      P4fJZOJ3futLfPZCiv/57UvMzBWZm3TxnR9e5jNnWu/g+scahVmPtEgQlwvlpiUGHxVmg65l
      y5+DxqAufmi4VQdVw3TMZmItfkDXAJthxVyuEapaXV0lkUhQqVQ4ceIEy8vLOJ1OPB4PLpcL
      v9+/9W28kcxxaDqIxfIgtDnjd/CHv/kSf/H3F/nC+WP84k6Er362+bc/NBZc4VhrAYSjct8Z
      SYPAZtaT6cIQV+qhicQwEPTYub7UvG9dPxh1ewiDDoJ6vb4VVlxZWSGbzVKv13G5XKytrWE2
      mwkEAgSDQQ4fPoxO17iV+3ytF3Xv3QzxwvHdEZlxu4k/fvUT/MXfX+SlU8G230wTY1auLWy0
      fH4tkcXnenx1U61GXVe9wjZSubaJ8MPG8anxgU7n/s2vnXk0Ati80JPJJMlkErfbze3bt6lW
      q+j1eo4fP47JZMLv92M2m1Gr1czNzfX1XpdurfEHv958Pmo26PiTVz9Jp83qiXEr//Rea1do
      OCbzzNzeY9H9otdpKHZRjjIck5nowa590NFp1RyaGFzjxlm/c7ACqNVq5HI5UqkUZrOZmzdv
      Ui6XGRsbw2w2U6lUGBsbw263c/78+R2LSLvdwdWFDZ629R+zLpQatmB7m51JSZLotHbdzEBq
      RTgm8ysf70+gA6MLx8lajwk7o8hABRAOh4nFYjidTiwWC88//zwGQ3cxW0mCv/vxVQJuW0/Z
      Qtv58O5638nSD6O6n4vaLNKTkAu49pAUMgi6cVw1knu636AbRfqqf1GtlMkXitRqNVAUqtUa
      AMFgkLNnzzI3N7dVDaBbJEnit14+zd/+6Eo/QwLgF3fWeHGPMfZNbGY9yezuzaaHE7QfFxqV
      RL3eXgaRuIyvQ+/hUacvAcRjUW5cv8Hy6gqhpXvIxcGURz91yEMmX27Z0rIdtXqd+XCyZYXm
      Xpkct7LWpKLzXhKyB4m5CztEtab0bT8eFfqaAmnUEi63h3opTThT5uwA7dCvvnKKv/x/H/HH
      r56nl+/YzebUe7HJbsfnMrO6keZYcKeHZXUjjc9lHtj79IvJoCWdLWDSN7/AG4njqsc+zoNO
      XwKIRNbRGO04HONM+rRsJDN4B2SHDnod+MYsfHR3g7NNwpmtuHSrMf0ZlO036LHz9rXVXefb
      SOWZHN+7HXev2M0G8uVqy3GsRGUmB2AbftLpawr01NPPcezIIbxuDwarc+viHxS/+dlT/MPr
      13d182jHR/fWOT49uEYT/nFr0/5U4Xj2sW6CbWLtUCFuLZ59okKg+8WB7BFmM+l58WSAH7aJ
      xW8nls7jtBoG2t3EZtI3LUAV6bKl6X7TqG/Tejc4HHu8u9XDwoEUAMDnzh3htQ+XuvK8XLq5
      s8v4oFCrpF05tals6UAsgjvtBodj8mPdrR4WDqwAtBo1n3/pCN94/XrH1354N9LU/rBXXDYj
      sdSDwqwHKd/ZYmpfIW4jleuqHuioc2AFAPCJ01PcCyfZaNLecpNSpUpS3p/Q5MN9apNyEccA
      spEGgbVDz+B6XdlV0kSwmwP9CUmSxFc/e4q//sFHLV9zYzHGs4f3x5czOW7d0d0xkui+p+9+
      065RRr5Y6bno7qhyoAUAcGxqHI1GxfffuUuhtHs9cPH6Kh872blDSz9MjDfyAjYJxWT8roMh
      ALvFsKvdzybheO9l10eVAy8AgN/74gvU6nW+9pev83c/ubr1h1cUhaVImlnf4ByC2/GPWQlF
      HwggHMt03dR6v9GoVS3DxOGYjF8sgLtiKHZJdFo1nzt3lFdemOPd6yH+4h8uMmYzcfaYnymv
      faBZR9sx6DQ7LrK1eBbfAREA0NKPFIpmBmYKfNIZCgFsotOo+cTTU7x0OsiVe+t89+IdvnC+
      y1rmfaJRS41a/lo16dzBCIF2Yi2e5eUBVGIYBYZKAJuoJIlnDvt45vD+lfvYxOO0EElkCbht
      dMykecSo1Tt7jm2SkAt9W8pHjb7WALVqlXKlUYUBRaHWg2Vh2Ai4bYRjMslsgbEeK0HvN2bD
      7s2wzYoV6jY9AAQP6OsOcOfWDQpVcDqs6KhicAVw7bFi70FlYtzCalTGbNT23NN3v7GZ9MiF
      0o5qyXK+jHUPPXRHjb4EoDWYMQGFcp6oXObslIFarbbVkgcartBarTb0P7ssOi5eS6GR6jgt
      Wkql0oEZm0mvJp7KMmbRbj0+H4ritusP1DgP4s+b9CUAnaqOXIZx1zhTXs0OO3SrhsfDyrTe
      QCRxBZvZyIsnPQfq93NYTZSqCibTg6lZMlsh6HUdqHEeZPoSQHD28I7/P8nLLY1aRV1RDqS7
      0mzU7vIDhWIyz+1jLdAnDbFS6gKTXst6Mnvg5tZWo45cYefu+Fo821PnylFHCKAL/GOWA5lb
      azPvzglIZYsiBNoDQ7kP8KiZdNtIt/DdPE6sJv0OP9BBsmsPC0IAXXB8amzPvR1xA3YAAAam
      SURBVGn3A4tRR7b4YA2QyhYH0jxilBAC6IJZv5NZ//4Y7vbCw3nBq9EnqxTio0CsAYYYtUq1
      ozjWWvzgRaoOOkIAQ05927w/IipB9IwQwJCj2maJDsVl/OMHx649DAgBDDlqtUTlfm3WTK40
      kAZyo4QQwJBjM+mR8+VGL67HXLB3GOkrCiSn4iRzFcZdNox6Lbl8FUsXXcsFg2ezZ3CtXn9i
      Hbn7SV8CUFRacql1qpU89WKRwOHjW5swYjPm0WK36ElliyRkhUm3TXz+PdKbAKol5kNR9FIZ
      l3eCXCqCXKigVknU6/VGgozgkWLSa8nkimRyJXwus/gb9EhvAtDoOTQd4N7tG1RLCbxePzMz
      epLpLGPORvhtr9WhBb1hMxsolKuE41k+/dyM+Px7pK8p0NzRnZ2/x5xi7vm4sJl0LEbSrCdz
      B6Jo77AhokBDjsWkJ1sokS2UMRv2tyP8k4gQwJBjNepIykURAu0TIYAhx2LUMR9O4hWVoPtC
      CGDIsZh0rMYywgTXJ0IAQ45KkjDqtEIAfSIE8ARgNelEBKhPhACeANx2s0iE7xNJGeDeea1W
      Exsxj4FSpTrQBoGjhLgDPAGIi79/hAAEI01/AlAUotEYhUIBpV4lmysOeFgCwaOhr3tndG2F
      e5EUvjErtWKBiUPCDi0YTvqyQ6ejYXKZPHmjhmKhzLRa2KEFw0nfUaB4IoFGrcJqMpDIlhl3
      2kQUSDB0DDwMqhKdSQRDxEDjZ5IkbU2D6vV6UzEoitKyu2Gr53p9vN1zrcY16Pfp93yD/Nz6
      GcNBHlu75/r9uw5UANsHIEnSgbwbHNRxbXKQx/ckjm2gUyCBYNhQf+1rX/vaIE/4/vuXcOir
      ZLBhUO/U1vZQaeMfRNYjmE3mHc9DQ9Hzd26yFktRyMRZCkexGFRcv7PIuM3E7bvzZPMVHPad
      Hphblz9A5/CydPVtsAW2jUECFCrFLHfuLZArVlhbmidTqFDJp4nE0zjtNt6+eJFgMLjnzyG0
      eJtcVUsqvo7NZtvVYfXhz4JCgrWcGotevSuULCdjLCzOU6kqzC8sUkNNbPEqRYMHs6rCxfev
      EJz0723AlQzvXVnC79Lyzoe3mfS5d45ZklhbWeTuYgi1UmJ+YRGj2cqHl68SmPBz+cNLVNBi
      s+w9L+FRXEOU86yurQ++OrRJq7ASiqCY1YTLMnqpisY8Ti0T4cbdZfwzR5GKiUZvK4sDg6ZG
      eDmE0azhzu15po6exGoycXh2ivGxMdbTBar1Kl6DGsXmwqSPoTGY0UoVKk3as+ptdmLhFUp5
      mXxO5r3XXiM4dRjb+DjlfIm52QA2kx5JVaBqn4JKEu/EITJ3bhFZXUBjsrWdg3ZLVdJRTq4D
      dW5cvUy+rGC1mdFLkJGT3FuIcPSpI5QScTROO3ZJy2pug4xFxcLNm9j8M+jrOQ6ffBa7cwxt
      dINMNMXh06dYn58n4PcQrijMR5aw28x7H7NSIZ8vshKKY7PquHP9Q+5GchyZ9qFWqZiZm8Pt
      Hicul5DzFU6fnOJeqITLbgbqaNVastkssPcO9Y/iGlJrNCjV0uCtECaHm6KcQJJAqddRG50k
      lm8wHpjCOzHFdMCH2z+Bx+3GZbciAUgqNDoDx06ewmxsDByqvP/BZbQaDdVSjpVUhkoiyurK
      KuuRCBW0VMqF3QOQtBSSYWzeIIlojMnZOVRaE+vzt/BPBUhFFpmPJNEY7GQ25ilWaoRXFllZ
      CaOodWSTUVJyfu8fhAQBj5NwLIOEggL4HAY28nWMRhMnTz2F0Whk2u9h8tAsVOooSg21RsO4
      d4LZ6QDjvgAOq4m71z4kW1Hhclu4deUqikbH4uIyodAqep2G9bUwhcre92ACXgfhRB6tJJEr
      VrBb9HgcRuSyhAp4/9L76LRatKoaV67OYzLBysoqkfUoKq2eYnEwjoBHcQ3VUKNQG5E1QLXE
      neUIRw5NP+6RDB3RtSU0Vj9Oy5OZcD8aAhAIWnAwY1oCwSNCCEAw0ggBCIaCxOIVvvWTd1m+
      fZ3v/PD1bWHQxr+lW7cpKApvv31xV6j0o0tvsxTaQI6u8OPX3+TipY+2nhOpRIKhoJzPsJEs
      sm6VqKTDfOsb30DRW6gXEshliXHKTOiMLNy5zuLKGl/9l1/kO//3G1TVZrLxVS5MHObSe5c5
      96uf46ff+x5f/x8/IjB1RAhAMDzMOA1sFCUam5oNDBY7BmDaZqRQrWMf8+04RkFh3DtJcMKN
      Sg7wszfeRKUzMTF7nKDLIqJAgtFGrAEEI83/B4uWMtzAagQ4AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Word Cloud ' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='pareto chart' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
